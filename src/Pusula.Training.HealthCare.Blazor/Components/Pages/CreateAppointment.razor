@page "/appointments/operations/create"
@using Pusula.Training.HealthCare.Permissions
@attribute [Authorize(HealthCarePermissions.Appointments.Default)]

@using Pusula.Training.HealthCare.Appointments
@using Pusula.Training.HealthCare.Blazor.Services
@using Pusula.Training.HealthCare.Doctors
@using Pusula.Training.HealthCare.MedicalServices
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Shared
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.SplitButtons
@inherits HealthCareComponentBase

@inject PatientAdaptor PatientAdaptor
@inject IAppointmentAppService AppointmentAppService
@inject IDoctorsAppService DoctorsAppService
@inject IUiMessageService UiMessageService
@inject ILookupAppService LookupAppService
@inject IMedicalServicesAppService MedicalServicesAppService
@inject IPatientsAppService PatientsAppService

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["NewAppointment"]">
    <link href="../Components/Pages/CreateAppointment.razor.css" rel="stylesheet"/>
    <link href="../Components/Pages/Appointments.razor.css" rel="stylesheet"/>

</PageHeader>

<div class="row py-3">
    <div class="col-sm-12 col-md-3 p-2">
        <div class="card border-1 border-black py-4 px-3 d-flex flex-column gap-1">
            <div>
                <div class="d-flex justify-content-between align-items-end mb-3">
                    <h5 class="m-0">@L["Patient"]</h5>
                    <div>
                        <SfButton CssClass="e-primary" OnClick="OpenPatientSearchModal">
                            <SfIcon IconCss="e-icons e-search"></SfIcon> @L["SearchPatients"]
                        </SfButton>
                    </div>
                </div>

                @if (IsSelectedPatientValid)
                {
                    <div class="d-flex flex-column gap-1 my-1">
                        <h6 class="m-0">@L["PatientNumber"]: @(SelectedPatient.PatientNumber)</h6>
                        <hr class="m-0"/>
                        <h6 class="m-0">@L["FirstName"] : @(SelectedPatient.FirstName)</h6>
                        <hr class="m-0"/>
                        <h6 class="m-0">@L["LastName"] : @(SelectedPatient.LastName)</h6>
                        <hr class="m-0"/>
                        <h6 class="m-0">@L["Gender"]: @(SelectedPatient.Gender)</h6>
                        <hr class="m-0"/>
                        <h6 class="m-0">@L["Birthdate"]: @(SelectedPatient.BirthDate.ToString("yyyy/MM/dd"))</h6>
                        <hr class="m-0"/>
                        <h6 class="m-0">@L["PatientType"]: @(SelectedPatient.PatientType)</h6>
                    </div>
                }
            </div>

            <hr class="my-1"/>
            <div class="d-flex flex-column gap-2 mt-2">
                <h5>@L["Summary"]</h5>
                <div>
                    <h6>@L["MedicalService"]</h6>
                    <SfDropDownList
                        ShowClearButton="true"
                        TValue="Guid"
                        TItem="MedicalServiceDto"
                        Placeholder="@L["Select"]"
                        AllowFiltering="true"
                        DataSource="@MedicalServiceCollection"
                        @bind-Value="NewAppointment.MedicalServiceId"
                        Width="100%">
                        <DropDownListEvents TItem="MedicalServiceDto" TValue="Guid" OnValueSelect="@OnMedicalServiceChange"></DropDownListEvents>
                        <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
                <div>
                    <h6>@L["Doctors"]</h6>
                    <SfDropDownList
                        Readonly="@(!IsDoctorsEnabled)"
                        TValue="Guid"
                        TItem="LookupDto<Guid>"
                        Placeholder="@L["Select"]"
                        AllowFiltering="true"
                        DataSource="@DoctorsCollection"
                        @bind-Value="NewAppointment.DoctorId"
                        Width="100%">
                        <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                        <DropDownListEvents TItem="LookupDto<Guid>" TValue="Guid" OnValueSelect="@OnDoctorChange"></DropDownListEvents>
                    </SfDropDownList>
                </div>
                <div>
                    <h6>@L["AppointmentDate"]</h6>
                    <SfDatePicker TValue="DateTime" @bind-Value="@GetAppointmentSlotFilter.Date" Placeholder="@L["AppointmentMaxDate"]"></SfDatePicker>
                </div>
                <div>
                    <SfButton Disabled="@(!IsSlotSearchAvailable)" CssClass="e-primary w-100" OnClick="GetAppointmentSlots">
                        <SfIcon IconCss="e-icons e-search"></SfIcon> @L["GetAppointmentSlots"]
                    </SfButton>
                    <SfButton CssClass="e-danger w-100 mt-2" OnClick="ClearFilters">
                        <SfIcon IconCss="e-icons e-filter-clear"></SfIcon> @L["ClearFilters"]
                    </SfButton>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-9 p-2">
        <div class="card border-1 border-black p-4">
            <h5>@L["AppointmentSchedule"]</h5>
            @if (IsSlotSearchAvailable)
            {
                <div class="row">
                    <div class="days-container">
                        <SfButton CssClass="e-flat e-primary left" IconCss="e-icons e-arrow-left" OnClick="OnLoadDaysDaysLeft">
                        </SfButton>
                        <div class="days d-flex gap-1 overflow-hidden align-items-center justify-content-center">
                            @if (DaysLookupList.Count == 0)
                            {
                                @for (var i = 0; i < LoadCount; i++)
                                {
                                    <DayItemShimmerCard></DayItemShimmerCard>
                                }
                            }
                            else
                            {
                                @foreach (var item in DaysLookupList)
                                {
                                    <AppointmentDayCard Item="@item"
                                                        OnSelectAppointmentDay="@OnSelectAppointmentDay">
                                    </AppointmentDayCard>
                                }
                            }

                        </div>
                        <SfButton CssClass="e-flat e-primary" IconCss="e-icons e-arrow-right" OnClick="OnLoadDaysRight">
                        </SfButton>
                    </div>
                </div>

                <div class="d-flex justify-content-between my-1">
                    <div>
                        <h6 class="fw-normal"> @L["AvailableAppointments"] (@AvailableSlotCount)</h6>
                    </div>
                </div>
            }


            <SfSchedule @ref="ScheduleObj" TValue="AppointmentCustomData" Height="650px" AllowDragAndDrop="false" AllowMultiDrag="false" @bind-SelectedDate="@CurrentDate">
                <ScheduleEvents TValue="AppointmentCustomData" Navigating="@OnNavigateDate" OnPopupOpen="@OnPopupOpen"></ScheduleEvents>

                <ScheduleQuickInfoTemplates>
                    <HeaderTemplate>
                        <div class="quick-info-header">
                            <div class="quick-info-header-content" style="align-items: center; color: black;">
                                <div class="quick-info-title">
                                    @L["NewAppointment"]
                                </div>
                                <div class="duration-text">
                                    @GetEventDetails((context as AppointmentCustomData))
                                </div>
                            </div>
                        </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="e-cell-content">
                            <div class="content-area">
                                @L["Patient"]: @(SelectedPatient?.FirstName + " " + SelectedPatient?.LastName)
                            </div>
                            <div class="content-area">
                                @L["AppointmentDate"]: @(((context as AppointmentCustomData)!).DateOnly.Date.ToString("yyyy/MM/dd"))
                            </div>
                            <div class="content-area">
                                @L["From"]: @(((context as AppointmentCustomData)!).StartTime)
                            </div>
                            <div class="content-area">
                                @L["End"]: @(((context as AppointmentCustomData)!).EndTime)
                            </div>
                            <div class="content-area">
                                @L["Available"]: @(((context as AppointmentCustomData)!).IsReadOnly ? (@L["Yes"] + " ✔️") : (@L["No"] + " ❌"))
                            </div>
                        </div>
                    </ContentTemplate>
                    <FooterTemplate>
                        <div class="cell-footer">
                            <SfButton Content="@L["GoDetails"]" OnClick="@(e => OnMoreDetailsClick(e, (context as AppointmentCustomData)!))"></SfButton>
                        </div>
                    </FooterTemplate>
                </ScheduleQuickInfoTemplates>

                <ScheduleEventSettings EnableTooltip="true" DataSource="@SlotItems">
                    <Template>
                        <div class="@(((context as AppointmentCustomData)?.IsReadOnly ?? false) ? "" : "readonly-event")">
                            <div>@L["TimePeriod"]: @((context as AppointmentCustomData)?.StartTime.ToString("hh:mm")) - @((context as AppointmentCustomData)?.EndTime.ToString("hh:mm"))</div>
                            <div>@L["Availability"]: @((context as AppointmentCustomData)?.IsReadOnly)</div>
                        </div>
                    </Template>
                    <TooltipTemplate>
                        <div class="tooltip-wrap">
                            <div>
                                <strong>@L["Available"]: </strong> @(((context as AppointmentCustomData)!).IsReadOnly ? @L["Available"] : @L["NotAvailable"])
                            </div>
                            <div>
                                <strong>@L["From"]: </strong> @(((context as AppointmentCustomData)!).StartTime)
                            </div>
                            <div>
                                <strong>@L["To"]: </strong>@(((context as AppointmentCustomData)!).EndTime)
                            </div>
                        </div>
                    </TooltipTemplate>
                </ScheduleEventSettings>

                <ScheduleViews>
                    <ScheduleView Option="View.Day"></ScheduleView>
                    <ScheduleView Option="View.WorkWeek"></ScheduleView>
                </ScheduleViews>
            </SfSchedule>

        </div>
    </div>
</div>

@* Search or Create Patients Modal *@
<SfDialog CssClass="p-2" MinHeight="50vh" Width="60%" IsModal="true" Header="@L["ManagePatients"]"
          ShowCloseIcon="true" Visible="@IsVisibleSearchPatient">
    <DialogEvents Closed="@ClosePatientSearchModal"></DialogEvents>
    <DialogTemplates>
        <Header>
            @L["ManagePatients"]
        </Header>
        <Content>
            <SfTab>
                <TabItems>
                    <TabItem>
                        <ChildContent>
                            <TabHeader IconCss="e-search" Text="@L["SearchPatients"]"></TabHeader>
                        </ChildContent>
                        <ContentTemplate>
                            <div class="row d-flex gap-2 align-bottom align-items-end mt-3">
                                <div class="col-4">
                                    <h6 class="text-black">@L["FirstName"]</h6>
                                    <SfTextBox @bind-Value="@GetPatientsInput.FirstName" Placeholder="@L["FirstName"]"></SfTextBox>
                                </div>
                                <div class="col-4">
                                    <h6 class="text-black">@L["LastName"]</h6>
                                    <SfTextBox @bind-Value="@GetPatientsInput.LastName" Placeholder="@L["LastName"]"></SfTextBox>
                                </div>
                                <div class="col-2">
                                    <SfButton CssClass="e-primary" OnClick="GetPatients">
                                        <SfIcon IconCss="e-icons e-search"></SfIcon> @L["Search"]
                                    </SfButton>
                                </div>
                            </div>

                            <div class="my-3">
                                <SfGrid
                                    @ref="PatientGrid"
                                    DataSource="@PatientCollection"
                                    TValue="PatientDto"
                                    AllowPaging="true"
                                    AllowSorting="true">
                                    <SfDataManager
                                        AdaptorInstance="@typeof(PatientAdaptor)"
                                        Adaptor="Adaptors.CustomAdaptor">
                                    </SfDataManager>
                                    <GridPageSettings PageSize="8"></GridPageSettings>
                                    <GridColumns>
                                        <GridColumn HeaderText="@L["IdentityNumber"]" Width="auto">
                                            <Template Context="context">
                                                @($"{((PatientDto)context).IdentityAndPassportNumber}")
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="@L["Number"]" Width="auto">
                                            <Template Context="context">
                                                @($"{((PatientDto)context).PatientNumber}")
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="@L["Name"]" Width="auto">
                                            <Template Context="context">
                                                @($"{((PatientDto)context).FirstName} {((PatientDto)context).LastName}")
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="@L["Gender"]" Width="auto">
                                            <Template Context="context">
                                                @($"{((PatientDto)context).Gender}")
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="@L["Birthdate"]" Width="auto">
                                            <Template Context="context">
                                                @($"{((PatientDto)context).BirthDate:yyyy/MM/dd}")
                                            </Template>
                                        </GridColumn>

                                        <GridColumn HeaderText="@L["Actions"]" Width="150">
                                            <Template Context="context">
                                                <SfButton CssClass="e-success" OnClick="@(() => SelectPatient((PatientDto)context))">
                                                    @L["Select"]
                                                </SfButton>
                                            </Template>
                                        </GridColumn>
                                    </GridColumns>
                                </SfGrid>
                            </div>
                        </ContentTemplate>
                    </TabItem>

                    <TabItem>
                        <ChildContent>
                            <TabHeader IconCss="e-plus" Text="@L["RegisterPatient"]"></TabHeader>
                        </ChildContent>
                        <ContentTemplate>
                            <div class="row mt-3">
                                <EditForm Model="@NewPatient" OnValidSubmit="RegisterPatient">
                                    <DataAnnotationsValidator/>
                                    <div class="form-row">
                                        <div class="form-group col-6">
                                            <h6 class="text-black">@L["IdentityNumber"]</h6>
                                            <SfTextBox @bind-Value="@NewPatient.IdentityAndPassportNumber" Placeholder="@L["IdentityNumber"]"></SfTextBox>
                                            <ValidationMessage For="@(() => NewPatient.IdentityAndPassportNumber)"></ValidationMessage>
                                        </div>
                                        <div class="form-group col-6">
                                            <h6 class="text-black">@L["FirstName"]</h6>
                                            <SfTextBox @bind-Value="@NewPatient.FirstName" Placeholder="@L["FirstName"]"></SfTextBox>
                                            <ValidationMessage For="@(() => NewPatient.FirstName)"></ValidationMessage>
                                        </div>
                                        <div class="form-group col-6">
                                            <h6 class="text-black">@L["LastName"]</h6>
                                            <SfTextBox @bind-Value="@NewPatient.LastName" Placeholder="@L["LastName"]"></SfTextBox>
                                            <ValidationMessage For="@(() => NewPatient.LastName)"></ValidationMessage>
                                        </div>
                                        <div class="form-group col-6">
                                            <h6 class="text-black">@L["Gender"]</h6>
                                            <SfDropDownList DataSource="@GendersCollection" @bind-Value="@NewPatient.Gender" TItem="KeyValuePair<string, EnumGender>" TValue="EnumGender">
                                                <DropDownListFieldSettings Text="Key" Value="Value"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                            <ValidationMessage For="@(() => NewPatient.Gender)"></ValidationMessage>
                                        </div>
                                        <div class="form-group col-6">
                                            <h6 class="text-black">@L["Birthdate"]</h6>
                                            <SfDatePicker TValue="DateTime" @bind-Value="@NewPatient.BirthDate"></SfDatePicker>
                                            <ValidationMessage For="@(() => NewPatient.BirthDate)"></ValidationMessage>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <SfButton Type="submit" CssClass="e-success e-outline e-custom" IsPrimary="true">
                                            @L["Register"]
                                        </SfButton>
                                    </div>
                                </EditForm>
                            </div>
                        </ContentTemplate>
                    </TabItem>
                </TabItems>
            </SfTab>
        </Content>
    </DialogTemplates>
</SfDialog>

@* Create Appointment Modal *@
<SfDialog CssClass="p-2" Visible="@IsCreateAppointmentOpen" IsModal="true" Width="575px" ShowCloseIcon="true">
    <DialogTemplates>
        <Header>
            <div>@L["NewAppointment"]</div>
        </Header>
        <Content>
            <EditForm Model="@NewAppointment" OnValidSubmit="@OnValidSubmitNewAppointment">
                <DataAnnotationsValidator/>
                <table class="custom-event-editor p-2" style="min-height: 380px; min-width: 300px;">
                    <tbody>
                    <tr>
                        <td class="my-2">@L["Patient"]</td>
                        <td class="mx-1" colspan="4">
                            <h6 class="m-0">
                                @(SelectedPatient?.FirstName + " " + SelectedPatient?.LastName)
                            </h6>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["Doctor"]</td>
                        <td class="mx-1" colspan="4">
                            <h6 class="m-0">
                                @(DoctorNameInfo)
                            </h6>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["MedicalService"]</td>
                        <td class="mx-1" colspan="4">
                            <h6 class="m-0">
                                @(MedicalServiceNameInfo)
                            </h6>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["Cost"]</td>
                        <td class="mx-1" colspan="4">
                            <h6 class="m-0">
                                @(NewAppointment.Amount) @L["TL"]
                            </h6>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["AppointmentType"]</td>
                        <td class="mx-1" colspan="4">
                            <SfDropDownList
                                TValue="Guid"
                                TItem="LookupDto<Guid>"
                                ID="EventType"
                                DataSource="@AppointmentTypesCollection"
                                @bind-Value="@(NewAppointment.AppointmentTypeId)"
                                Placeholder="@L["Select"]">
                                <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                            </SfDropDownList>
                            <ValidationMessage For="() => (NewAppointment.AppointmentTypeId)"/>

                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["From"]</td>
                        <td class="mx-1" colspan="4">
                            <SfDateTimePicker Enabled="false" @bind-Value="@(NewAppointment.StartTime)"></SfDateTimePicker>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["To"]</td>
                        <td colspan="4">
                            <SfDateTimePicker Enabled="false" @bind-Value="@(NewAppointment.EndTime)"></SfDateTimePicker>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel my-2">@L["SendReminder"]</td>
                        <td class="mx-1">
                            <SfSwitch @bind-Checked="@NewAppointment.ReminderSent"></SfSwitch>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel">@L["Notes"]</td>
                        <td colspan="4">
                            <SfTextBox @bind-Value="@NewAppointment.Notes"></SfTextBox>
                            <ValidationMessage For="@(() => NewAppointment.Notes)"/>
                        </td>
                    </tr>
                    </tbody>
                </table>
                <SfProgressButton CssClass="e-success e-outline e-custom" Content="Submit">
                    <ProgressButtonSpinSettings Position="SpinPosition.Right" Width="20">
                        <SpinTemplate>
                            <div class="template"></div>
                        </SpinTemplate>
                    </ProgressButtonSpinSettings>
                </SfProgressButton>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

<div class="col-lg-12 control-section toast-default-section">
    <SfToast ID="toast_default" @ref="ToastObj" Title="@ToastTitle" Content="@ToastContent" CssClass="@ToastCssClass" Timeout="5000" Icon="e-meeting">
        <ToastPosition X="Right" Y="Bottom"></ToastPosition>
    </SfToast>
</div>