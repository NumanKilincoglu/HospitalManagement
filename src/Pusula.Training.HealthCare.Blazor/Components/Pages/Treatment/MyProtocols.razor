@page "/my-protocols"

@attribute [Authorize(HealthCarePermissions.Protocols.Default)]
@using Pusula.Training.HealthCare.Protocols
@using Pusula.Training.HealthCare.Localization
@using Pusula.Training.HealthCare.Shared
@using Blazorise.Components
@using Pusula.Training.HealthCare.Blazor.Services
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@inherits HealthCareComponentBase
@inject IProtocolsAppService ProtocolsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager
@inject ProtocolStateService ProtocolStateService
@inject ILookupAppService LookupAppService

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["MyProtocols"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Form id="ProtocolSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]"
                              >
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="ProtocolSearchForm" Clicked="GetProtocolsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>

        <Row Class="mt-3 mb-3">
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>

        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinStartTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.StartTimeMin"
                                    DateChanged="@OnStartTimeMinChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxStartTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.StartTimeMax"
                                    DateChanged="@OnStartTimeMaxChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinEndTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.EndTimeMin"
                                    DateChanged="@OnEndTimeMinChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxEndTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.EndTimeMax"
                                    DateChanged="@OnEndTimeMaxChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
           
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Patient"]</FieldLabel>
                        <Select TValue="Guid?" 
                                SelectedValue="@Filter.PatientId"
                                SelectedValueChanged="@OnPatientIdChangedAsync">

                            <SelectItem></SelectItem>

                            @foreach (var item in PatientsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@item.Id">
                                    @item.DisplayName
                                </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Department"]</FieldLabel>
                        <Select TValue="Guid?" 
                                SelectedValue="@Filter.DepartmentId"
                                SelectedValueChanged="@OnDepartmentIdChangedAsync">

                            <SelectItem></SelectItem>

                            @foreach (var item in DepartmentsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@item.Id">
                                    @item.DisplayName
                                </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Doctor"]</FieldLabel>
                        <Select TValue="Guid?"  
                                SelectedValue="@Filter.DoctorId"
                                SelectedValueChanged="@OnDoctorIdChangedAsync">

                            <SelectItem></SelectItem>

                            @foreach (var item in DoctorsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@item.Id">
                                    @item.DisplayName
                                </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Protocol Type"]</FieldLabel>
                        <Select TValue="Guid?" 
                                SelectedValue="@Filter.ProtocolTypeId"
                                SelectedValueChanged="@OnProtocolTypeIdChangedAsync">
                            <SelectItem></SelectItem>

                            @foreach (var item in ProtocolTypesCollection)
                            {
                            <SelectItem TValue="Guid" Value="@item.Id">
                                @item.DisplayName
                            </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
            </Row>
        </div>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        @if (SelectedProtocols.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllProtocolsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedProtocols.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedProtocols.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }

                <div>
                    @if ((SelectedProtocols.Count == PageSize || SelectedProtocols.Count == ProtocolList.Count) && TotalCount > SelectedProtocols.Count)
                    {
                        if (!AllProtocolsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }

                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedProtocolsAsync">
                        <Icon Name="@IconName.Delete"/> @L["Delete"]
                    </Button>
                </div>
            </div>

            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="ProtocolWithNavigationPropertiesDto"
                  Data="ProtocolList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <RadarSpinner/>
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>
            <DataGridColumns>

                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Protocol.StartTime"
                                Caption="@L["StartTime"]">
                    <DisplayTemplate>
                        @context.Protocol.StartTime.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Patient.FirstName"
                                Caption="@L["Patient"]">
                    <DisplayTemplate>
                        @($"{context.Patient?.FirstName} {context.Patient?.LastName}")
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Department.Name"
                                Caption="@L["Department"]">
                </DataGridColumn>


                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Protocol.EndTime"
                                Caption="@L["EndTime"]">
                    <DisplayTemplate>
                        @context.Protocol?.EndTime?.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                
                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Doctor.FirstName"
                                Caption="@L["Doctor"]">
                    <DisplayTemplate>
                        @($"{context.Doctor?.FirstName} {context.Doctor?.LastName}")
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="ProtocolType.Name"
                                Caption="@L["ProtocolType"]">
                    <DisplayTemplate>
                        @context.ProtocolType?.Name
                    </DisplayTemplate>
                </DataGridColumn>
                
                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Button Color="Color.Primary" Clicked="() => NavigateToExamination(context.Protocol.Id)">
                            <Icon Name="IconName.Directions" /> @L["GoToExamination"]
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>
                
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
