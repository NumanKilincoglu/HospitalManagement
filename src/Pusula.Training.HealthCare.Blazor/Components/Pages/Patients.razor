@page "/patients"

@attribute [Authorize(HealthCarePermissions.Patients.Default)]
@using Pusula.Training.HealthCare.Countries
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Localization
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@inherits HealthCareComponentBase
@inject IPatientsAppService PatientsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager
@inject ICountryAppService CountryAppService

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Patients"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        @*//<suite-custom-code-block-1>*@
        @*//</suite-custom-code-block-1>*@
        <Form id="PatientSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="PatientSearchForm" Clicked="GetPatientsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>

        <Row Class="mt-3 mb-3">
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>

        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["FirstName"]</FieldLabel>
                        <TextEdit Text="@Filter.FirstName" TextChanged="@OnFirstNameChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["LastName"]</FieldLabel>
                        <TextEdit Text="@Filter.LastName" TextChanged="@OnLastNameChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["IdentityNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.IdentityAndPassportNumber" TextChanged="@OnIdentityAndPassportNumberChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinBirthDate"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.BirthDateMin"
                                    DateChanged="@OnBirthDateMinChangedAsync"
                                    Placeholder="@string.Empty" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxBirthDate"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.BirthDateMax"
                                    DateChanged="@OnBirthDateMaxChangedAsync"
                                    Placeholder="@string.Empty" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["EmailAddress"]</FieldLabel>
                        <TextEdit Text="@Filter.EmailAddress" TextChanged="@OnEmailAddressChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MobilePhoneNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.MobilePhoneNumber" TextChanged="@OnMobilePhoneNumberChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <!--    <FieldLabel>@L["Show Archived"]</FieldLabel>  -->
                        <Check TValue="bool?" Checked="@Filter.IsDeleted" CheckedChanged="@OnDeletedData"> Show Archived </Check>
                    </Field>
                </Column>

            </Row>

        </div>

    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        @if (SelectedPatients.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllPatientsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedPatients.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedPatients.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }

                <div>
                    @if ((SelectedPatients.Count == PageSize || SelectedPatients.Count == PatientList.Count) && TotalCount > SelectedPatients.Count)
                    {
                        if (!AllPatientsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }

                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedPatientsAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>

            <hr class="my-1 mx-0" />
        }
        <DataGrid TItem="PatientDto"
                  Data="PatientList"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedPatients"
                  RowSelectable="@((args) =>  !args.Item.IsDeleted)"
                  SelectedRowsChanged="SelectedPatientRowsChanged"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>
            <DataGridColumns>

                @if (CanDeletePatient && PatientList.Any())
                {
                    <DataGridMultiSelectColumn TItem="PatientDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }

                <DataGridColumn TItem="PatientDto"
                                Field="FirstName"
                                Caption="@L["FirstName"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="LastName"
                                Caption="@L["LastName"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="BirthDate"
                                Caption="@L["BirthDate"]">
                    <DisplayTemplate>
                        @context.BirthDate.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="IdentityAndPassportNumber"
                                Caption="@L["IdentityNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="EmailAddress"
                                Caption="@L["EmailAddress"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="MobilePhoneNumber"
                                Caption="@L["MobilePhoneNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="RelativePhoneNumber"
                                Caption="@L["RelativePhoneNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientDto"
                                Field="Gender"
                                Caption="@L["Gender"]">
                </DataGridColumn>


                <!-- Edit Button Column -->
                <DataGridColumn TItem="PatientDto">
                    <DisplayTemplate>
                        <Button Color="Color.Primary" Disabled="context.IsDeleted"
                                Clicked="async () => await OpenEditPatientModalAsync(context)">
                            <Icon Name="@IconName.Edit" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>


                <!-- Detail Page Column -->
                <DataGridColumn TItem="PatientDto">
                    <DisplayTemplate>
                        <Button Color="Color.Primary" @onclick="() => NavigateToDetail(context)"
                                Disabled="context.IsDeleted">
                            <Icon Name="@IconName.ExternalLinkSquareAlt" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>

                <!-- Delete Button Column -->

                <DataGridColumn TItem="PatientDto">
                    <DisplayTemplate>
                        <Button Color="Color.Danger" Clicked="() => DeletePatientAsync(context)"
                                Disabled="context.IsDeleted">
                            <Icon Name="@IconName.Times" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>

                <!-- Revert Button Column -->
                <!--
                <DataGridColumn TItem="PatientDto">
                    <DisplayTemplate>
                        <Button Color="Color.Secondary" Clicked="  () => RevertPatientAsync (context)" Disabled="!context.IsDeleted">
                            <Icon Name="@IconName.Undo" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>
                -->

            </DataGridColumns>


        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreatePatientModal" Closing="@CreatePatientModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" Size="ModalSize.ExtraLarge">
        <EditForm method="post" Model="NewPatient" OnValidSubmit="CreatePatientAsync" FormName="create" Enhance>

            <ModalHeader>
                <ModalTitle style="display: inline-flex; align-items: center;">
                    <Icon Name="@("fa-pen-to-square")" IconSize="IconSize.x2" Style="margin-right:5px;"></Icon>
                    <Heading Size="HeadingSize.Is1" style="margin: 0;">@L["CreatePatient"] </Heading>
                </ModalTitle>
                <CloseButton Clicked=@(async()=>await CloseCreatePatientModalAsync())></CloseButton>
            </ModalHeader>

            <ModalBody>
                <Validations @ref="@NewPatientValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewPatient"
                             ValidateOnLoad="false">

                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        @L["Nationality"]
                                    </FieldLabel>
                                    <Select TValue="string" @bind-SelectedValue="@NewPatient.Nationality" onchange="@OnNationalityChangedAsync">
                                        @foreach (var item in Nationalities)
                                        {
                                            <SelectItem TValue="string" Value="@item.Country">
                                                @item.Country
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is5">

                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["IdentityNumber/PassportNumber"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.IdentityAndPassportNumber" MaxLength="PatientConsts.IdentityNumberLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["BirthDate"]
                                    </FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewPatient.BirthDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["FirstName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.FirstName" MaxLength="PatientConsts.NameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["LastName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.LastName" MaxLength="PatientConsts.LastNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Gender"]
                                    </FieldLabel>
                                    <Select TValue="EnumGender" @bind-SelectedValue="@NewPatient.Gender" style="text-overflow: ellipsis;">
                                        @foreach (var item in Genders)
                                        {
                                            <SelectItem TValue="EnumGender" Value="@(Enum.Parse<EnumGender>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Field>
                                <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                    @L["CountryCode"]
                                </FieldLabel>
                                <Addons>
                                    <Addon AddonType="AddonType.Start">
                                        <AddonLabel><Icon Class="fa-plus" /></AddonLabel>
                                    </Addon>
                                    <Addon AddonType="AddonType.Body">
                                        <TextEdit Value="@MainCountryCode" MaxLength="CountryConsts.CountryCodeMaxLength" ReadOnly style="margin-top: 0px;" />
                                    </Addon>
                                </Addons>
                            </Field>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                        @L["PhoneNo"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@MobilePhoneNumber" MaxLength="PatientConsts.OnlyPhoneNumberMaxLength" style="margin-top: 0px;">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Field>
                                <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                    @L["CountryCode"]
                                </FieldLabel>
                                <Addons>
                                    <Addon AddonType="AddonType.Start">
                                        <AddonLabel><Icon Class="fa-plus" /></AddonLabel>
                                    </Addon>
                                    <Addon AddonType="AddonType.Body">
                                        <TextEdit @bind-Text="@RelativeCountryCode" MaxLength="CountryConsts.CountryCodeMaxLength" style="margin-top: 0px;" />
                                    </Addon>
                                </Addons>
                            </Field>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                        @L["RelativePhoneNo"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@RelativePhoneNumber" MaxLength="PatientConsts.OnlyPhoneNumberMaxLength" style="margin-top: 0px;"
                                              @onchange="OnRelativePhoneNumberChanged">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["PatienttoRelative"]</FieldLabel>
                                    <Select TValue="EnumRelative" @bind-SelectedValue="@NewPatient.Relative" style="text-overflow: ellipsis; margin-top: 0px;"
                                            disabled="@(string.IsNullOrWhiteSpace(NewPatient.RelativePhoneNumber))">
                                        @foreach (var item in Relatives)
                                        {
                                            <SelectItem TValue="EnumRelative" Value="@(Enum.Parse<EnumRelative>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["EmailAddress"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.EmailAddress" MaxLength="PatientConsts.EmailAddressMaxLength" Role="TextRole.Email">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel> @L["MothersName"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.MothersName" MaxLength="PatientConsts.NameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["FathersName"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.FathersName" MaxLength="PatientConsts.NameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        @L["PatientType"]
                                    </FieldLabel>
                                    <Select TValue="EnumPatientTypes" @bind-SelectedValue="@NewPatient.PatientType" style="text-overflow: ellipsis;">
                                        @foreach (var item in PationTypes)
                                        {
                                            <SelectItem TValue="EnumPatientTypes" Value="@(Enum.Parse<EnumPatientTypes>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>
                                        @L["DiscountGroup"]
                                    </FieldLabel>
                                    <Select TValue="EnumDiscountGroup" @bind-SelectedValue="@NewPatient.DiscountGroup" style="text-overflow: ellipsis;">
                                        @foreach (var item in DiscountGroups)
                                        {
                                            <SelectItem TValue="EnumDiscountGroup" Value="@(Enum.Parse<EnumDiscountGroup>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is12">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>
                                        @L["Address"]
                                    </FieldLabel>
                                    <MemoEdit Rows="3" @bind-Text="NewPatient.Address" MaxLength="PatientConsts.AddressMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </MemoEdit>
                                </Field>
                            </Validation>
                        </Column>

                    </Row>
                </Validations>
            </ModalBody>

            <ModalFooter>
                <Row class="justify-content-between align-items-center" style="width: 100%;">
                    <Column>
                        <Div style="display: flex; align-items: center; color: gray; font-style: italic; background-color: #f9f9f9; padding: 8px; border-radius: 5px;">
                            <Icon class="fa-circle" style="color: red; font-size: 6px; margin-right: 5px;" />
                            <Paragraph style="margin: 0;">
                                @L["The fields shown in red are required to be filled"]
                            </Paragraph>
                        </Div>
                    </Column>
                    <Column class="text-end">
                        <Button Color="Color.Danger" Clicked="CloseCreatePatientModalAsync">
                            @L["Cancel"]
                        </Button>
                        <Button Type="Blazorise.ButtonType.Submit" Form="CreatePatientForm" Clicked="CreatePatientAsync" Color="Color.Info">
                            @L["Submit"]
                        </Button>
                    </Column>
                </Row>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>


@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditPatientModal" Closing="@EditPatientModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" Size="ModalSize.ExtraLarge">
        <EditForm method="post" Model="EditingPatient" OnValidSubmit="UpdatePatientAsync" FormName="update" Enhance>

            <ModalHeader>
                <ModalTitle style="display: inline-flex; align-items: center;">
                    <Icon Name="@("fa-arrows-rotate")" IconSize="IconSize.x2" Style="margin-right:5px;"></Icon>
                    <Heading Size="HeadingSize.Is1" style="margin: 0;">@L["UpdatePatient"] </Heading>
                </ModalTitle>
                <CloseButton Clicked=@(async()=>await CloseEditPatientModalAsync()) />
            </ModalHeader>

            <ModalBody>
                <Validations @ref="@EditingPatientValidations"
                             Mode="ValidationMode.Auto"
                             Model="@EditingPatient"
                             ValidateOnLoad="false">

                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        @L["Nationality"]
                                    </FieldLabel>
                                    <Select TValue="string" @bind-SelectedValue="@EditingPatient.Nationality">
                                        @foreach (var item in Nationalities)
                                        {
                                            <SelectItem TValue="string" Value="@item.Country">
                                                @item.Country
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["IdentityNumber/PassportNumber"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.IdentityAndPassportNumber" MaxLength="PatientConsts.IdentityNumberLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["BirthDate"]
                                    </FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingPatient.BirthDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["FirstName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.FirstName" MaxLength="PatientConsts.NameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["LastName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.LastName" MaxLength="PatientConsts.LastNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Gender"]
                                    </FieldLabel>
                                    <Select TValue="EnumGender" @bind-SelectedValue="@EditingPatient.Gender" style="text-overflow: ellipsis;">
                                        @foreach (var item in Genders)
                                        {
                                            <SelectItem TValue="EnumGender" Value="@(Enum.Parse<EnumGender>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                        @L["PhoneNo"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.MobilePhoneNumber" MaxLength="PatientConsts.MobilePhoneNumberMaxLength" style="margin-top: 0px;">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                        @L["RelativePhoneNo"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.RelativePhoneNumber" MaxLength="PatientConsts.MobilePhoneNumberMaxLength" style="margin-top: 0px;"
                                              @onchange="OnRelativePhoneNumberChanged">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["PatienttoRelative"]</FieldLabel>
                                    <Select TValue="EnumRelative" @bind-SelectedValue="@EditingPatient.Relative" style="text-overflow: ellipsis; margin-top: 0px;"
                                            disabled="@(string.IsNullOrWhiteSpace(EditingPatient.RelativePhoneNumber))">
                                        @foreach (var item in Relatives)
                                        {
                                            <SelectItem TValue="EnumRelative" Value="@(Enum.Parse<EnumRelative>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["EmailAddress"]</FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.EmailAddress" MaxLength="PatientConsts.EmailAddressMaxLength" Role="TextRole.Email">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel> @L["MothersName"]</FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.MothersName" MaxLength="PatientConsts.NameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["FathersName"]</FieldLabel>
                                    <TextEdit @bind-Text="@EditingPatient.FathersName" MaxLength="PatientConsts.NameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        @L["PatientType"]
                                    </FieldLabel>
                                    <Select TValue="EnumPatientTypes" @bind-SelectedValue="@EditingPatient.PatientType" style="text-overflow: ellipsis;">
                                        @foreach (var item in PationTypes)
                                        {
                                            <SelectItem TValue="EnumPatientTypes" Value="@(Enum.Parse<EnumPatientTypes>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>
                                        @L["DiscountGroup"]
                                    </FieldLabel>
                                    <Select TValue="EnumDiscountGroup" @bind-SelectedValue="@EditingPatient.DiscountGroup" style="text-overflow: ellipsis;">
                                        @foreach (var item in DiscountGroups)
                                        {
                                            <SelectItem TValue="EnumDiscountGroup" Value="@(Enum.Parse<EnumDiscountGroup>(item.Key.ToString()))">
                                                @item.Value
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is12">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>
                                        @L["Address"]
                                    </FieldLabel>
                                    <MemoEdit Rows="3" @bind-Text="EditingPatient.Address" MaxLength="PatientConsts.AddressMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </MemoEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                </Validations>
            </ModalBody>

            <ModalFooter>
                <Row class="justify-content-between align-items-center" style="width: 100%;">
                    <Column>
                        <Div style="display: flex; align-items: center; color: gray; font-style: italic; background-color: #f9f9f9; padding: 8px; border-radius: 5px;">
                            <Icon class="fa-circle" style="color: red; font-size: 6px; margin-right: 5px;" />
                            <Paragraph style="margin: 0;">
                                @L["The fields shown in red are required to be filled"]
                            </Paragraph>
                        </Div>
                    </Column>
                    <Column class="text-end">
                        <Button Color="Color.Danger" Clicked="CloseEditPatientModalAsync">
                            @L["Cancel"]
                        </Button>
                        <Button Type="Blazorise.ButtonType.Submit" Form="CreatePatientForm" Clicked="UpdatePatientAsync" Color="Color.Info">
                            @L["Submit"]
                        </Button>
                    </Column>
                </Row>
            </ModalFooter>

        </EditForm>
    </ModalContent>
</Modal>