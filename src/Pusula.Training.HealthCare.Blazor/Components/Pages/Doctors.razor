@page "/doctors"

@attribute [Authorize(HealthCarePermissions.Doctors.Default)]
@using Pusula.Training.HealthCare.Countries
@using Pusula.Training.HealthCare.Doctors
@using Pusula.Training.HealthCare.Localization
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Pusula.Training.HealthCare.Patients
@using Volo.Abp.Http.Client
@inherits HealthCareComponentBase
@inject IDoctorsAppService DoctorsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager
@inject ICountryAppService CountryAppService

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Doctors"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        @*//<suite-custom-code-block-1>*@
        @*//</suite-custom-code-block-1>*@
        <Form id="DoctorSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="DoctorSearchForm" Clicked="GetDoctorsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>

        <Row Class="mt-3 mb-3">
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>

        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["FirstName"]</FieldLabel>
                        <TextEdit Text="@Filter.FirstName" TextChanged="@OnFirstNameChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["LastName"]</FieldLabel>
                        <TextEdit Text="@Filter.LastName" TextChanged="@OnLastNameChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["IdentityNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.IdentityNumber" TextChanged="@OnIdentityNumberChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinBirthDate"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.BirthDateMin"
                                    DateChanged="@OnBirthDateMinChangedAsync"
                                    Placeholder="@string.Empty" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxBirthDate"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.BirthDateMax"
                                    DateChanged="@OnBirthDateMaxChangedAsync"
                                    Placeholder="@string.Empty" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Gender"]</FieldLabel>
                        <Select TValue="EnumGender?" SelectedValue="Filter.Gender" SelectedValueChanged="@OnGenderChangedAsync">
                            <SelectItem></SelectItem>
                            @foreach (EnumGender type in Enum.GetValues(typeof(EnumGender)))
                            {
                            <SelectItem Value="@type">@L[type.ToString()]</SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Email"]</FieldLabel>
                        <TextEdit Text="@Filter.Email" TextChanged="@OnEmailChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["PhoneNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.PhoneNumber" TextChanged="@OnPhoneNumberChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["YearOfExperienceMin"]</FieldLabel>
                        <NumericEdit TValue="int?" Value="@Filter.YearOfExperienceMin" ValueChanged="@OnYearOfExperienceMinChangedAsync" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is4">
                    <Field>
                        <FieldLabel>@L["City"]</FieldLabel>
                        <Select TValue="Guid?" SelectedValue="@Filter.CityId" SelectedValueChanged="@OnCityChangedAsync">
                            <SelectItem></SelectItem>
                            @foreach (var item in CitiesCollection)
                            {
                            <SelectItem TValue="Guid" Value="@item.Id">
                                @item.DisplayName
                            </SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>

                <Column ColumnSize="ColumnSize.Is4">
                    <Field>
                        <FieldLabel>@L["District"]</FieldLabel>
                        <Select TValue="Guid?" @bind-SelectedValue="@Filter.DistrictId">
                            <SelectItem></SelectItem>
                            @foreach (var item in DistrictsCollection)
                            {
                            <SelectItem TValue="Guid" Value="@item.Id">
                                @item.DisplayName
                            </SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>

                <Column ColumnSize="ColumnSize.Is4">
                    <Field>
                        <FieldLabel>@L["Title"]</FieldLabel>
                        <Select TValue="Guid?" @bind-SelectedValue="@Filter.TitleId">
                            <SelectItem></SelectItem>
                            @foreach (var item in TitlesCollection)
                            {
                            <SelectItem TValue="Guid" Value="@item.Id">
                                @item.DisplayName
                            </SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>

                <Column ColumnSize="ColumnSize.Is4">
                    <Field>
                        <FieldLabel>@L["Department"]</FieldLabel>
                        <Select TValue="Guid?" @bind-SelectedValue="@Filter.DepartmentId">
                            <SelectItem></SelectItem>
                            @foreach (var item in DepartmentsCollection)
                            {
                            <SelectItem TValue="Guid" Value="@item.Id">
                                @item.DisplayName
                            </SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>
            </Row>
        </div>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        @if (SelectedDoctors.Any())
        {
                <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllDoctorsSelected)
                {
                            <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                            </p>
                }
                else
                {
                            <p class="lead mb-0">
                        @if (SelectedDoctors.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedDoctors.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                            </p>
                }

                    <div>
                    @if ((SelectedDoctors.Count == PageSize || SelectedDoctors.Count == DoctorList.Count) && TotalCount > SelectedDoctors.Count)
                    {
                        if (!AllDoctorsSelected)
                        {
                                        <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                                        <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }

                        <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedDoctorsAsync">
                            <Icon Name="@IconName.Delete" /> @L["Delete"]
                        </Button>
                    </div>
                </div>

                <hr class="my-1 mx-0" />
        }
        <DataGrid TItem="DoctorWithNavigationPropertiesDto"
                  Data="DoctorList"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedDoctors"
                  SelectedRowsChanged="SelectedDoctorRowsChanged"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>
            <DataGridColumns>

                @if (CanDeleteDoctor && DoctorList.Any())
                {
                        <DataGridMultiSelectColumn TItem="DoctorWithNavigationPropertiesDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }

                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto" Caption="@L["Name"]">
                    <DisplayTemplate>
                        @($"{context.Title.TitleName} {context.Doctor.FirstName} {context.Doctor.LastName}")
                    </DisplayTemplate>
                </DataGridColumn> 

                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto"
                                Field="Department.Name"
                                Caption="@L["Department"]">
                </DataGridColumn>

                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto"
                                Field="Doctor.Email"
                                Caption="@L["Email"]">
                </DataGridColumn>

                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto" Caption="@L["YearsOfExperience"]">
                    <DisplayTemplate>
                        @(DateTime.Now.Year - context.Doctor.StartDate.Year -
                        (DateTime.Now.DayOfYear < context.Doctor.StartDate.DayOfYear ? 1 : 0))
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto"
                                Caption="@L["Gender"]">
                    <DisplayTemplate>
                        @($"{context.Doctor.Gender.ToString().First()}")
                    </DisplayTemplate>
                </DataGridColumn>

                <!-- Edit Button Column -->
                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto">
                    <DisplayTemplate >
                        <Button Color="Color.Primary"
                                Clicked="async () => await OpenEditDoctorModalAsync(context)" >
                            <Icon Name="@IconName.Edit" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>

                <!-- Delete Button Column -->

                <DataGridColumn TItem="DoctorWithNavigationPropertiesDto">
                    <DisplayTemplate>
                        <Button Color="Color.Danger"    
                                Clicked="() => DeleteDoctorAsync(context)">
                            <Icon Name="@IconName.Times" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateDoctorModal" Closing="@CreateDoctorModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" Size="ModalSize.ExtraLarge">
        <EditForm method="post" Model="NewDoctor" OnValidSubmit="CreateDoctorAsync" FormName="create" Enhance>

            <ModalHeader>
                <ModalTitle style="display: inline-flex; align-items: center;">
                    <Icon Name="@("fa-pen-to-square")" IconSize="IconSize.x2" Style="margin-right:5px;"></Icon>
                    <Heading Size="HeadingSize.Is1" style="margin: 0;">@L["CreateDoctor"] </Heading>
                </ModalTitle>
                <CloseButton Clicked=@(async()=>await CloseCreateDoctorModalAsync())></CloseButton>
            </ModalHeader>

            <ModalBody>
                <Validations @ref="@NewDoctorValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewDoctor"
                             ValidateOnLoad="false">

                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">
                            
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["IdentityNumber"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@NewDoctor.IdentityNumber" MaxLength="DoctorConsts.IdentityNumberLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["BirthDate"]
                                    </FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewDoctor.BirthDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Title"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@NewDoctor.TitleId">
                                        <SelectItem></SelectItem>
                                        @foreach (var item in TitlesCollection)
                                        {
                                            <SelectItem TValue="Guid" Value="@item.Id">
                                                @item.DisplayName
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["StartDate"]
                                    </FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewDoctor.StartDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["FirstName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@NewDoctor.FirstName" MaxLength="DoctorConsts.FirstNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is4">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["LastName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@NewDoctor.LastName" MaxLength="DoctorConsts.LastNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Gender"]
                                    </FieldLabel>
                                    <Select TValue="EnumGender" @bind-SelectedValue="@NewDoctor.Gender" style="text-overflow: ellipsis;">
                                        @foreach (var item in Genders)
                                        {
                                        <SelectItem TValue="EnumGender" Value="@(Enum.Parse<EnumGender>(item.Key.ToString()))">
                                            @item.Value
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Department"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@NewDoctor.DepartmentId">
                                        <SelectItem></SelectItem>
                                        @foreach (var item in DepartmentsCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["PhoneNumber"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@PhoneNumber" MaxLength="DoctorConsts.PhoneNumberMaxLength" style="margin-top: 0px;">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Email"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewDoctor.Email" MaxLength="DoctorConsts.EmailMaxLength" Role="TextRole.Email">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["City"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@NewDoctor.CityId" @onchange="(e) => OnCityChanged(Guid.Parse(e.Value.ToString()))">
                                        <SelectItem></SelectItem>
                                        @foreach (var item in CitiesCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["District"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@NewDoctor.DistrictId">
                                        <SelectItem></SelectItem>
                                        @foreach (var item in DistrictsCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                </Validations>
            </ModalBody>

            <ModalFooter>
                <Row class="justify-content-between align-items-center" style="width: 100%;">
                    <Column>
                        <Div style="display: flex; align-items: center; color: gray; font-style: italic; background-color: #f9f9f9; padding: 8px; border-radius: 5px;">
                            <Icon class="fa-circle" style="color: red; font-size: 6px; margin-right: 5px;" />
                            <Paragraph style="margin: 0;">
                                @L["The fields shown in red are required to be filled"]
                            </Paragraph>
                        </Div>
                    </Column>
                    <Column class="text-end">
                        <Button Color="Color.Danger" Clicked="CloseCreateDoctorModalAsync">
                            @L["Cancel"]
                        </Button>
                        <Button Type="ButtonType.Submit" Form="CreateDoctorForm" Clicked="CreateDoctorAsync" Color="Color.Info">
                            @L["Submit"]
                        </Button>
                    </Column>
                </Row>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditDoctorModal" Closing="@EditDoctorModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" Size="ModalSize.ExtraLarge">
        <EditForm method="post" Model="EditingDoctor" OnValidSubmit="UpdateDoctorAsync" FormName="update" Enhance>

            <ModalHeader>
                <ModalTitle style="display: inline-flex; align-items: center;">
                    <Icon Name="@("fa-arrows-rotate")" IconSize="IconSize.x2" Style="margin-right:5px;"></Icon>
                    <Heading Size="HeadingSize.Is1" style="margin: 0;">@L["UpdateDoctor"] </Heading>
                </ModalTitle>
                <CloseButton Clicked=@(async()=>await CloseEditDoctorModalAsync()) />
            </ModalHeader>

            <ModalBody>
                <Validations @ref="@EditingDoctorValidations"
                             Mode="ValidationMode.Auto"
                             Model="@EditingDoctor"
                             ValidateOnLoad="false">

                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">

                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["IdentityNumber"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingDoctor.IdentityNumber" MaxLength="DoctorConsts.IdentityNumberLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["BirthDate"]
                                    </FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingDoctor.BirthDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Title"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@EditingDoctor.TitleId">
                                        @foreach (var item in TitlesCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["StartDate"]
                                    </FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingDoctor.StartDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["FirstName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingDoctor.FirstName" MaxLength="DoctorConsts.FirstNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is5">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["LastName"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingDoctor.LastName" MaxLength="DoctorConsts.LastNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Gender"]
                                    </FieldLabel>
                                    <Select TValue="EnumGender" @bind-SelectedValue="@EditingDoctor.Gender" style="text-overflow: ellipsis;">
                                        @foreach (var item in Genders)
                                        {
                                        <SelectItem TValue="EnumGender" Value="@(Enum.Parse<EnumGender>(item.Key.ToString()))">
                                            @item.Value
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["Department"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@EditingDoctor.DepartmentId">
                                        @foreach (var item in DepartmentsCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; vertical-align: middle;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["PhoneNumber"]
                                    </FieldLabel>
                                    <TextEdit @bind-Text="@EditingDoctor.PhoneNumber" MaxLength="DoctorConsts.PhoneNumberMaxLength" style="margin-top: 0px;">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Email"]</FieldLabel>
                                    <TextEdit @bind-Text="@EditingDoctor.Email" MaxLength="DoctorConsts.EmailMaxLength" Role="TextRole.Email">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>

                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["City"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@EditingDoctor.CityId" @onchange="(e) => OnCityChanged(Guid.Parse(e.Value.ToString()))">
                                        @foreach (var item in CitiesCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">
                                        <Icon Class="fa-circle" style="color:red; font-size:5px; vertical-align: middle; margin-right:5px;" />
                                        @L["District"]
                                    </FieldLabel>
                                    <Select TValue="Guid" @bind-SelectedValue="@EditingDoctor.DistrictId">
                                        @foreach (var item in DistrictsCollection)
                                        {
                                        <SelectItem TValue="Guid" Value="@item.Id">
                                            @item.DisplayName
                                        </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    <Divider />
                </Validations>
            </ModalBody>

            <ModalFooter>
                <Row class="justify-content-between align-items-center" style="width: 100%;">
                    <Column>
                        <Div style="display: flex; align-items: center; color: gray; font-style: italic; background-color: #f9f9f9; padding: 8px; border-radius: 5px;">
                            <Icon class="fa-circle" style="color: red; font-size: 6px; margin-right: 5px;" />
                            <Paragraph style="margin: 0;">
                                @L["The fields shown in red are required to be filled"]
                            </Paragraph>
                        </Div>
                    </Column>
                    <Column class="text-end">
                        <Button Color="Color.Danger" Clicked="CloseEditDoctorModalAsync">
                            @L["Cancel"]
                        </Button>
                        <Button Type="ButtonType.Submit" Form="CreateDoctorForm" Clicked="UpdateDoctorAsync" Color="Color.Info">
                            @L["Submit"]
                        </Button>
                    </Column>
                </Row>
            </ModalFooter>

        </EditForm>
    </ModalContent>
</Modal>