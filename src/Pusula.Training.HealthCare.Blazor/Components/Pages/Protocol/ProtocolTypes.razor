@page "/protocol-types"

@attribute [Authorize(HealthCarePermissions.ProtocolTypes.Default)]
@using Pusula.Training.HealthCare.Localization

@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Pusula.Training.HealthCare.Blazor.Components.Grids
@using Pusula.Training.HealthCare.Blazor.Components.Modals
@using Pusula.Training.HealthCare.Blazor.Components.Filters
@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Web

@using Pusula.Training.HealthCare.ProtocolTypes
@using Volo.Abp.Http.Client
@using Pusula.Training.HealthCare.Blazor.Services
@inherits HealthCareComponentBase
@inject IProtocolTypesAppService ProtocolTypesAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager


@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Protocol Types"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">
</PageHeader>
<!--
<SfBreadcrumb>
    <BreadcrumbItems>
        <Syncfusion.Blazor.Navigations.BreadcrumbItem IconCss="e-icons e-home" />
        <Syncfusion.Blazor.Navigations.BreadcrumbItem Text=@L["Protocol Type"] />
    </BreadcrumbItems>
</SfBreadcrumb>
-->
@* ************************* SEARCH ************************* *@

<div class="row py-3 px-2">
    <div class="col-12 border-1 bg-white  p-4" style="box-shadow:0 4px 8px rgba(0,0,0,0.2); ">

        <GenericFilter TFilter="GetProtocolTypeInput"
                       Filter="@Filter"
                       GetSearchValue="filter => filter?.FilterText ?? string.Empty"
                       SetSearchValue="(filter, value) => filter.FilterText = value"
                       OnFilterChanged="HandleFilterChanged"
                       OnClearFilters="ClearFilters">
            
            <div class="col-4 mt-3">
                <h6>@L["Protocol Type Name"]</h6>
                <input type="text" class="form-control" placeholder="Search" @bind-value="Filter.Name"/>
            </div>

        </GenericFilter>
    </div>
</div>

@if (_spinnerVisible)
{
<SfSpinner  Label="Loading..." Type="SpinnerType.Material" CssClass="e-spinner" Visible="_spinnerVisible" />
}
else
{
 
        <GenericGrid TModel="ProtocolTypeDto"
                     @ref="_gridRef"
                     Columns="@_columns"
                     OnEdit="OpenEditModal"
                     PageSize="11"
                     Query="@FilterQuery"
                     OnDelete="DeleteProtocolTypeAsync"
                     AdaptorInstance="@typeof(ProtocolTypeAdaptor)"
                     AdaptorType="Adaptors.CustomAdaptor"></GenericGrid>
    
}

<GenericModal TModel="ProtocolTypeCreateDto" @ref="_createModal" Title="Add Protocol Type" Model="@_newProtocol" OnSaveCallback="CreateProtocolTypeAsync">
    <div>
        <label>Name:</label>
        <SfTextBox @bind-Value="@_newProtocol.Name" Placeholder="Enter name"></SfTextBox>
        <ValidationMessage For="@(() => _newProtocol.Name)"></ValidationMessage>
    </div>
</GenericModal>

<GenericModal TModel="ProtocolTypeUpdateDto" @ref="_editModal" Title="Edit Protocol Type" Model="@_selectedProtocolType" OnSaveCallback="UpdateProtocolTypeAsync">
    <div>
        <label>Name:</label>
        <SfTextBox @bind-Value="@_selectedProtocolType.Name" Placeholder="Enter name"></SfTextBox>
        <ValidationMessage For="@(() => _selectedProtocolType.Name)"></ValidationMessage>
    </div>
</GenericModal>
