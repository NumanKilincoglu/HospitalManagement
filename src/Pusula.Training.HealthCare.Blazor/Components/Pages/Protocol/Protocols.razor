@page "/protocolsaejfsgk"

@attribute [Authorize(HealthCarePermissions.Protocols.Default)]
@using Pusula.Training.HealthCare.Protocols
@using Pusula.Training.HealthCare.Localization
@using Pusula.Training.HealthCare.Shared
@using Blazorise.Components
@using Pusula.Training.HealthCare.Doctors
@using Pusula.Training.HealthCare.Patients
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@inherits HealthCareComponentBase
@inject IProtocolsAppService ProtocolsAppService
@inject IPatientsAppService PatientsAppService
@inject IDoctorsAppService DoctorsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Protocols"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Form id="ProtocolSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]"
                              >
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="ProtocolSearchForm" Clicked="GetProtocolsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>

        <Row Class="mt-3 mb-3">
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>

        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")" >
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinStartTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.StartTimeMin"
                                    DateChanged="@OnStartTimeMinChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxStartTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.StartTimeMax"
                                    DateChanged="@OnStartTimeMaxChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinEndTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.EndTimeMin"
                                    DateChanged="@OnEndTimeMinChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxEndTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
                                    InputMode="DateInputMode.Date"
                                    Date="@Filter.EndTimeMax"
                                    DateChanged="@OnEndTimeMaxChangedAsync"
                                    Placeholder="@string.Empty"/>
                    </Field>
                </Column>
                
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Department"]</FieldLabel>
                        <Select TValue="Guid?"
                                @onclick="LoadLookupsAsync"
                                SelectedValue="@Filter.DepartmentId"
                                SelectedValueChanged="@OnDepartmentIdChangedAsync">

                            <SelectItem></SelectItem>

                            @foreach (var item in DepartmentsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@item.Id">
                                    @item.DisplayName
                                </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
                
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Insurance"]</FieldLabel>
                        <Select TValue="Guid?"
                                @onclick=" LoadLookupsAsync"
                                SelectedValue="@Filter.InsuranceId"
                                SelectedValueChanged="@OnInsuranceIdChangedAsync">

                            <SelectItem></SelectItem>

                            @foreach (var item in InsuranceCollections)
                            {
                            <SelectItem TValue="Guid" Value="@item.Id">
                                @item.DisplayName
                            </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Doctor"]</FieldLabel>
                        <Select TValue="Guid?"
                                @onclick="LoadLookupsAsync"
                                SelectedValue="@Filter.DoctorId"
                                SelectedValueChanged="@OnDoctorIdChangedAsync">

                            <SelectItem></SelectItem>

                            @foreach (var item in DoctorsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@item.Id">
                                    @item.DisplayName
                                </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Protocol Type"]</FieldLabel>
                        <Select TValue="Guid?"
                                @onclick="LoadLookupsAsync"
                                SelectedValue="@Filter.ProtocolTypeId"
                                SelectedValueChanged="@OnProtocolTypeIdChangedAsync">
                            <SelectItem></SelectItem>

                            @foreach (var item in ProtocolTypesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@item.Id">
                                    @item.DisplayName
                                </SelectItem>
                            }

                        </Select>
                    </Field>
                </Column>

            </Row>
            @*//<suite-custom-code-block-2>*@
            @*//</suite-custom-code-block-2>*@
        </div>

        @*//<suite-custom-code-block-3>*@
        @*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        @if (SelectedProtocols.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllProtocolsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedProtocols.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedProtocols.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }

                <div>
                    @if ((SelectedProtocols.Count == PageSize || SelectedProtocols.Count == ProtocolList.Count) && TotalCount > SelectedProtocols.Count)
                    {
                        if (!AllProtocolsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }

                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedProtocolsAsync">
                        <Icon Name="@IconName.Delete"/> @L["Delete"]
                    </Button>
                </div>
            </div>

            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="ProtocolWithNavigationPropertiesDto"
                  Data="ProtocolList"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedProtocols"
                  RowSelectable="@((args) => CanDeleteProtocol)"
                  SelectedRowsChanged="SelectedProtocolRowsChanged"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <RadarSpinner/>
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>
            <DataGridColumns>

                @if (CanDeleteProtocol && ProtocolList.Any())
                {
                    <DataGridMultiSelectColumn TItem="ProtocolWithNavigationPropertiesDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }


                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Patient.FirstName"
                                Caption="@L["Patient"]">
                    <DisplayTemplate>
                        @($"{context.Patient?.FirstName} {context.Patient?.LastName}")
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Department.Name"
                                Caption="@L["Department"]">
                </DataGridColumn>


                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Doctor.FirstName"
                                Caption="@L["Doctor"]">
                    <DisplayTemplate>
                        @($"{context.Doctor?.FirstName} {context.Doctor?.LastName}")
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="ProtocolType.Name"
                                Caption="@L["Protocol Type"]">
                    <DisplayTemplate>
                        @context.ProtocolType?.Name
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Insurance.InsuranceCompanyName"
                                Caption="@L["Insurance"]">
                    <DisplayTemplate>
                        @context.Insurance?.InsuranceCompanyName
                    </DisplayTemplate>
                </DataGridColumn>

                

                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Protocol.StartTime"
                                Caption="@L["StartTime"]">
                    <DisplayTemplate>
                        @context.Protocol.StartTime.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"
                                Field="Protocol.EndTime"
                                Caption="@L["EndTime"]">
                    <DisplayTemplate>
                        @context.Protocol?.EndTime?.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                
                <DataGridEntityActionsColumn TItem="ProtocolWithNavigationPropertiesDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="ProtocolWithNavigationPropertiesDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="ProtocolWithNavigationPropertiesDto"
                                          Visible="@CanEditProtocol"
                                          Clicked="async () => await OpenEditProtocolModalAsync(context)"
                                          Text="@L["Edit"]">
                            </EntityAction>
                            <EntityAction TItem="ProtocolWithNavigationPropertiesDto"
                                          Visible="@CanDeleteProtocol"
                                          Clicked="() => DeleteProtocolAsync(context)"
                                          ConfirmationMessage="@(() => L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]">
                            </EntityAction>
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>

                <!-- Detail Page Column -->
                <DataGridColumn TItem="ProtocolWithNavigationPropertiesDto"  Caption="@L["Detay"]">
                    <DisplayTemplate>
                        <Button Color="Color.Primary" @onclick="() => NavigateToDetail(context)">
                            <Icon Name="@IconName.ExternalLinkSquareAlt" />
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>
                
            </DataGridColumns>


        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateProtocolModal" Closing="@CreateProtocolModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" >
        @*//<suite-custom-code-block-5>*@
        @*//</suite-custom-code-block-5>*@
        <Form id="CreateProtocolForm">
            <ModalHeader>
                <ModalTitle>@L["NewProtocol"]</ModalTitle>
                <CloseButton Clicked="CloseCreateProtocolModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewProtocolValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewProtocol"
                             ValidateOnLoad="false">

                    <Row>
                        <Column ColumnSize="ColumnSize.Is6">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["StartTime"]</FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewProtocol.StartTime">
                                        <Feedback>
                                            <ValidationError/>
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is6">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["EndTime"]</FieldLabel>
                                    <DateEdit TValue="DateTime?" InputMode="DateInputMode.Date" @bind-Date="@NewProtocol.EndTime">
                                        <Feedback>
                                            <ValidationError/>
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>

                        </Column>

                    </Row>
                    @if (IsPatientFound)
                    {
                        <Row >
                            <Column ColumnSize="ColumnSize.Is8">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">@L["Identity Number"]</FieldLabel>
                                    <TextEdit Text="@IdentityNumber" TextChanged="@((value) => IdentityNumber = value)" Placeholder="Enter Identity Number"/>
                                    <ValidationMessage For="@(() => IdentityNumber)"/>
                                </Field>
                            </Column>
                            <Column ColumnSize="ColumnSize.Is4">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center; color: white">@L["     sdfşklg      "]</FieldLabel>
                                    <Button Color="Color.Primary" Clicked="OnCheckIdentityNumberClicked">
                                        @L["Check"]
                                    </Button>
                                </Field>

                            </Column>
                        </Row>
                    }
                    <div style="display: @(IsPatientFound ? "block" : "none")">
                        <Column>
                            <Field>
                                <TextEdit Value="@FoundPatientName" Plaintext Disabled/>
                            </Field>
                        </Column>
                    </div>
                    <div style="display: @(!IsPatientFound ? "block" : "none")">
                        <Row>
                            <Column ColumnSize="ColumnSize.Is12" >
                                <Field>
                                    <FieldLabel>@L["First Name"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.FirstName" Placeholder="Enter First Name"/>
                                </Field>
                            </Column>
                            <Column ColumnSize="ColumnSize.Is12">
                                <Field>
                                    <FieldLabel>@L["Last Name"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.LastName" Placeholder="Enter Last Name"/>
                                </Field>
                            </Column> 
                            <Column ColumnSize="ColumnSize.Is12">
                                <Field>
                                    <FieldLabel>@L["Identity Number"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.IdentityAndPassportNumber" Placeholder="Enter Identity Number"/>
                                </Field>
                            </Column>
                           
                            <Column ColumnSize="ColumnSize.Is6">
                                <Field >
                                    <FieldLabel>@L["Birthdate"] *</FieldLabel>
                                    <DateEdit TValue="DateTime" @bind-Date="@NewPatient.BirthDate" InputMode="DateInputMode.Date"/>
                                </Field>
                            </Column>
                           
                            <Column ColumnSize="ColumnSize.Is6">
                                <Field>
                                    <FieldLabel style="display: inline-flex; align-items: center;">@L["Gender"] *</FieldLabel>
                                    <Select TValue="EnumGender" @bind-SelectedValue="@NewPatient.Gender">
                                        <SelectItem Value="EnumGender.MALE">@L["Male"]</SelectItem>
                                        <SelectItem Value="EnumGender.FEMALE">@L["Female"]</SelectItem>
                                    </Select>
                                </Field>
                            </Column>
                        </Row>
                    </div>
                    <Row>
                       
                        <Field>
                            <FieldLabel>@L["Department"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@NewProtocol.DepartmentId" >

                                <SelectItem></SelectItem>

                                @foreach (var department in DepartmentsCollection)
                                {
                                    <SelectItem TValue="Guid" Value="@(department.Id)">
                                        @(department.DisplayName)
                                    </SelectItem>
                                }
                            </Select>
                        </Field>

                        <Field>
                            <FieldLabel>@L["Doctor"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@NewProtocol.DoctorId">

                                <SelectItem></SelectItem>

                                @foreach (var doctor in DoctorsCollection)
                                {
                                    <SelectItem TValue="Guid" Value="@(doctor.Id)">
                                        @(doctor.DisplayName)
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                        <Field>
                            <FieldLabel>@L["Insurance"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@NewProtocol.InsuranceId">

                                <SelectItem></SelectItem>

                                @foreach (var insurance in InsuranceCollections)
                                {
                                <SelectItem TValue="Guid" Value="@(insurance.Id)">
                                    @(insurance.DisplayName)
                                </SelectItem>
                                }
                            </Select>
                        </Field>
                        <Field>
                            <FieldLabel>@L["Protocol Type"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@NewProtocol.ProtocolTypeId" >

                                <SelectItem></SelectItem>

                                @foreach (var type in ProtocolTypesCollection)
                                {
                                <SelectItem TValue="Guid" Value="@(type.Id)">
                                    @(type.DisplayName)
                                </SelectItem>
                                }
                            </Select>
                        </Field>
                    </Row>
                    
                    <Row>
                    

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Notes"] *</FieldLabel>
                                <TextEdit @bind-Text="@NewProtocol.Notes" MaxLength="ProtocolConsts.MaxNotesLength" Plaintext >
                                    <Feedback>
                                        <ValidationError/>
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        
                    </Row>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateProtocolModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateProtocolForm" Clicked="CreateProtocolAsync"/>
                @*//<suite-custom-code-block-6>*@
                @*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
        @*//<suite-custom-code-block-7>*@
        @*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditProtocolModal" Closing="@EditProtocolModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" >
        @*//<suite-custom-code-block-8>*@
        @*//</suite-custom-code-block-8>*@
        <Form id="EditProtocolForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditProtocolModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingProtocolValidations"
                             Mode="ValidationMode.Auto"
                             Model="@EditingProtocol"
                             ValidateOnLoad="false">
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["StartTime"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingProtocol.StartTime">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>
                
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["EndTime"]</FieldLabel>
                            <DateEdit TValue="DateTime?" InputMode="DateInputMode.Date" @bind-Date="@EditingProtocol.EndTime">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>

                    <Field>
                        <FieldLabel>@L["Department"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingProtocol.DepartmentId">
                            @foreach (var department in DepartmentsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(department.Id)">
                                    @(department.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>

                    <Field>
                        <FieldLabel>@L["Doctor"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingProtocol.DoctorId">
                            @foreach (var doctor in DoctorsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(doctor.Id)">
                                    @(doctor.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>

                    <Field>
                        <FieldLabel>@L["ProtocolType"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingProtocol.ProtocolTypeId">
                            @foreach (var type in ProtocolTypesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(type.Id)">
                                    @(type.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Insurance"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingProtocol.InsuranceId">
                            @foreach (var type in InsuranceCollections)
                            {
                            <SelectItem TValue="Guid" Value="@(type.Id)">
                                @(type.DisplayName)
                            </SelectItem>
                            }
                        </Select>
                    </Field>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditProtocolModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditProtocolForm" Clicked="UpdateProtocolAsync"/>
                @*//<suite-custom-code-block-9>*@
                @*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
        @*//<suite-custom-code-block-10>*@
        @*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>