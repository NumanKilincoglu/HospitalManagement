@page "/patient/{patientNo:int}/appointment"

@attribute [Authorize(HealthCarePermissions.Appointments.Default)]
@using Pusula.Training.HealthCare.Appointments
@using Pusula.Training.HealthCare.Doctors
@using Pusula.Training.HealthCare.Permissions
@using Pusula.Training.HealthCare.MedicalServices
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Shared
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@inherits HealthCareComponentBase

@inject IAppointmentAppService AppointmentAppService
@inject IMedicalServicesAppService MedicalServiceAppService
@inject IPatientsAppService PatientsAppService
@inject IUiMessageService UiMessageService
@inject NavigationManager NavigationManager
@inject ILookupAppService LookupAppService

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Appointments"]">
    <link href="../Components/Pages/Appointments.razor.css" rel="stylesheet"/>
</PageHeader>

<div class="row py-3">
<div class="col-sm-12 col-md-3">
    <div class="card border-1 border-black p-4">
        <h5 class="fw-bolder m-0">@L["ServiceSummary"]</h5>
        <hr class="my-2"/>
        <div class="card-body p-0">
            <div>
                <h6 class="text-start">@L["Department"]</h6>
                <Badge TextSize="TextSize.ExtraSmall" Class="p-2" Style="background-color: var(--bs-gray-600)">
                    @StepperModel.DepartmentName
                </Badge>
                <hr class="my-2"/>
                <h6 class="text-start">@L["Service"]</h6>
                <Badge TextSize="TextSize.ExtraSmall" Class="p-2" Style="background-color: var(--bs-gray-600)">
                    @StepperModel.MedicalServiceName
                </Badge>
                <hr class="my-2"/>
                <h6 class="text-start">@L["Doctor"]</h6>
                <Badge TextSize="TextSize.ExtraSmall" Class="p-2" Style="background-color: var(--bs-gray-600)">
                    @StepperModel.DoctorName
                </Badge>
                <hr class="my-2"/>
            </div>
            @if (ActiveStep != 3)
            {
                <div class="d-flex flex-column gap-2">
                    <!-- Cancel Button -->
                    @if (ActiveStep != 0)
                    {
                        <Button
                            @onclick="CancelProcess"
                            disabled="@(!IsFirstStepValid)"
                            class="border-thick-2 rounded-pill py-1"
                            Color="Color.Danger"
                            Outline>
                            @L["Cancel"]
                        </Button>
                    }

                    <!-- Back Button -->
                    @if (ActiveStep != 0)
                    {
                        <Button
                            @onclick="OnPreviousStep"
                            disabled="@(!IsFirstStepValid)"
                            class="border-thick-2 rounded-pill py-1"
                            Color="Color.Info"
                            Outline>
                            @L["Back"]
                        </Button>
                    }

                    <!-- Proceed Button -->
                    <Button
                        @onclick="OnNextStep"
                        disabled="@(!IsFirstStepValid)"
                        class="border-thick-2 rounded-pill py-1"
                        Color="Color.Info"
                        Outline>
                        @L["Proceed"]
                    </Button>
                </div>
            }
        </div>
    </div>
</div>

<div class="col-sm-12 col-md-9">
<Card Class="border-black border-1 p-4">
<CardBody>
<Div class="row mb-4">
    <SfStepper ReadOnly="true" Linear="true" @ref="Stepper" ShowTooltip="true" StepChanging="HandleStepChange">
        <StepperSteps>
            <StepperStep @ref="SelectServiceStepper" Label="@L["SelectService"]" IconCss="e-icons e-list-unordered">
            </StepperStep>
            <StepperStep @ref="ScheduleStepper" Label="@L["Schedule"]" IconCss="e-icons e-month-agenda"></StepperStep>
            <StepperStep @ref="ConfirmationStepper" Label="@L["Confirmation"]" IconCss="e-icons e-check-large"></StepperStep>
            <StepperStep @ref="ResultStepper" Label="@L["FinalResult"]" IconCss="e-icons e-description"></StepperStep>
        </StepperSteps>
        <StepperAnimationSettings Delay="100" Duration="2000"></StepperAnimationSettings>
    </SfStepper>
</Div>

@* Step 1 - Select Doctor and Service *@
@if (ActiveStep == 0)
{
    <Div>
        <div class="row gx-4">
            <div class="col-sm-12 col-md-8">
                <h5 class="fw-bold">@L["Doctors"]</h5>
                <div class="card h-100">
                    <div class="card-body h-100 p-0">
                        <Form id="DoctorSearchForm" class="mb-3" Width="Width.Is100">
                            <Addons>
                                <Addon AddonType="AddonType.Start">
                                    <AddonLabel
                                        Border="Blazorise.Border.RoundedStart"
                                        Padding="Padding.Is2"
                                        Style="background-color: var(--bs-gray-300)">
                                        <Icon IconSize="IconSize.Large"
                                              Name="IconName.Search">
                                        </Icon>
                                    </AddonLabel>
                                </Addon>
                                <Addon AddonType="AddonType.Body">
                                    <TextEdit
                                        Class="px-1"
                                        Style="background-color: var(--bs-gray-300)"
                                        Border="Blazorise.Border.RoundedEnd"
                                        Autofocus="true"
                                        Text="@MedicalServiceFilter.Name"
                                        TextChanged="@OnDoctorSearchChanged"
                                        Placeholder="@L["Search"]">
                                    </TextEdit>
                                </Addon>
                            </Addons>
                        </Form>

                        <div class="doctor-list h-80v d-flex flex-column p-1 gap-2 overflow-auto" style="max-height: 80vh">

                            @if (IsDoctorListLoading)
                            {
                                @for (var i = 0; i < @DoctorLoadingShimmerCount; i++)
                                {
                                    <DoctorShimmerCard></DoctorShimmerCard>
                                }
                            }
                            else if (!IsDoctorListLoading && DoctorsList.Count > 0)
                            {
                                @foreach (var doctor in DoctorsList)
                                {
                                    <DoctorCard DoctorModel="@doctor"
                                                OnDoctorSelect="@OnDoctorSelect"
                                                GetDoctorCardClass="@GetDoctorCardClass"/>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-4">
                <div class="mb-2">
                    <h5 class="fw-bold">@L["Departments"]</h5>
                    <SfDropDownList TItem="LookupDto<Guid>" TValue="Guid"
                                    AllowFiltering="true"
                                    ShowClearButton="true"
                                    Placeholder="@L["Select"]"
                                    PopupHeight="250px"
                                    @bind-Value="NewAppointment.DepartmentId"
                                    DataSource="@DepartmentsCollection">
                        <DropDownListEvents TItem="LookupDto<Guid>" TValue="Guid" OnValueSelect="@OnDepartmentChange"></DropDownListEvents>
                        <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
                <div>
                    <h5 class="fw-bold">@L["Services"]</h5>
                    <Form id="ServiceSearchForm" class="mb-2" Width="Width.Is100">
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel
                                    Border="Blazorise.Border.RoundedStart"
                                    Padding="Padding.Is2"
                                    Style="background-color: var(--bs-gray-300)">
                                    <Icon IconSize="IconSize.Large" Name="IconName.Search"></Icon>
                                </AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit
                                    Class="px-1"
                                    Style="background-color: var(--bs-gray-300)"
                                    Autofocus="true"
                                    Text="@MedicalServiceFilter.Name"
                                    TextChanged="@OnTextChanged"
                                    Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <Button Clicked="ClearServiceSearch" Class="px-2" Border="Blazorise.Border.RoundedEnd" Style="background-color: var(--bs-gray-300)">
                                    <Icon Name="IconName.Clear" Style="background-color: var(--bs-gray-300)"></Icon>
                                </Button>
                            </Addon>
                        </Addons>
                    </Form>

                    <SfListBox Height="350px" @ref="SelectServiceDropdown" TValue="ServiceSelectionItem[]" DataSource="@MedicalServiceCollection" TItem="ServiceSelectionItem">
                        <ListBoxEvents TValue="ServiceSelectionItem[]" ValueChange="OnServiceChange" TItem="ServiceSelectionItem"></ListBoxEvents>
                        <ListBoxFieldSettings Text="DisplayName" Value="DisplayName"/>
                        <ListBoxSelectionSettings ShowCheckbox="true" Mode="Syncfusion.Blazor.DropDowns.SelectionMode.Single"></ListBoxSelectionSettings>
                    </SfListBox>
                </div>
            </div>
        </div>
    </Div>
}
@* Step 2 - Schedule *@
else if (ActiveStep == 1)
{
    <Div Padding="Padding.Is2">
        <div class="row">
            <div class="col-12 d-flex flex-column">
                <div class="days-container">
                    <button class="carousel-control left" @onclick="OnLoadDaysDaysLeft">❮</button>
                    <div class="days d-flex gap-1 overflow-hidden align-items-center justify-content-center" id="daysCarousel">
                        @if (SlotDaysLoading || DaysLookupList.Count == 0)
                        {
                            @for (var i = 0; i < LoadCount; i++)
                            {
                                <DayItemShimmerCard></DayItemShimmerCard>
                            }
                        }
                        else
                        {
                            @foreach (var item in DaysLookupList)
                            {
                                <AppointmentDayCard Item="@item"
                                                    OnSelectAppointmentDay="@OnSelectAppointmentDay">
                                </AppointmentDayCard>
                            }
                        }

                    </div>
                    <button class="carousel-control right" @onclick="OnLoadDaysRight">❯</button>
                </div>

                <div class="appointment-section my-3">
                    <div class="d-flex justify-content-between">
                        <div>
                            <Text TextSize="TextSize.Heading6" TextWeight="TextWeight.Bold">
                                @StepperModel.DoctorName
                            </Text>
                        </div>

                        <div>
                            <Text TextSize="TextSize.Heading6" TextWeight="TextWeight.Bold">
                                @L["AvailableAppointments"]
                            </Text>
                            <Text TextSize="TextSize.Heading6" TextWeight="TextWeight.Normal">
                                (@AvailableSlotCount)
                            </Text>
                        </div>
                    </div>

                    <div class="d-flex gap-2 justify-content-start flex-wrap my-3">

                        @if (SlotsLoading)
                        {
                            @for (var i = 0; i < @LoadingShimmerCount; i++)
                            {
                                <SmallShimmerCard></SmallShimmerCard>
                            }
                        }

                        else if (!SlotsLoading && AvailableSlotCount > 0)
                        {
                            @foreach (var appointment in AppointmentSlots)
                            {
                                <AppointmentSlotCard Item="@appointment" Action="@SelectAppointmentSlot"></AppointmentSlotCard>
                            }
                        }

                        else
                        {
                            <div class="d-flex align-items-center justify-content-center rounded-1 px-2 py-1 light-red">
                                <h6 class="fs-6 fw-semibold text-white">@StepperModel.DoctorName @L[SlotErrorMessage]</h6>
                            </div>
                        }

                    </div>

                </div>
            </div>
        </div>
    </Div>
}
@* Step 3 - Confirmation *@
else if (ActiveStep == 2)
{
    <Div Padding="Padding.Is2" Class="container">
        <div class="row h-100 align-items-stretch">
            <div class="col-sm-12 col-md-6">
                <Card Shadow="Shadow.Default" Height="Height.Is100">
                    <CardBody Flex="Flex.Column" Display="Display.Flex" Gap="Gap.Is3">
                        <div>
                            <Label Class="form-label">@L["AppointmentNote"]</Label>
                            <TextEdit @bind-Value="StepperModel.Note" Placeholder="@L["TypeTheNote"]" Class="form-control"/>
                        </div>

                        <div>
                            <Label Class="form-label">@L["EAppointmentID"]</Label>
                            <TextEdit Disabled="true" @bind-Value="AppointmentId" Placeholder="@L["EAppointmentID"]" Class="form-control"/>
                        </div>

                        <div>
                            <Label Class="form-label">@L["EAppointmentPaymentID"]</Label>
                            <TextEdit Disabled="true" @bind-Value="PaymentId" Placeholder="@L["EAppointmentPaymentID"]" Class="form-control"/>
                        </div>
                        <div class="flex flex-column">
                            <div>
                                <Label Class="form-label">@L["AppointmentType"]</Label>
                            </div>
                            <SfDropDownList
                                TValue="Guid"
                                TItem="LookupDto<Guid>"
                                @bind-Value="StepperModel.AppointmentTypeId"
                                Placeholder="@L["Select"]"
                                AllowFiltering="true"
                                DataSource="@AppointmentTypesCollection"
                                Width="300px">
                                <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </div>
                        <div>
                            <Label Class="form-label">@L["SendReminder"]</Label>
                            <Switch Cursor="Cursor.Pointer" Width="Width.Px(60)" Height="Height.Px(30)" TValue="bool" Checked="@StepperModel.ReminderSent" CheckedChanged="@OnReminderSettingChanged"></Switch>
                        </div>

                    </CardBody>
                </Card>
            </div>
            <div class="col-sm-12 col-md-6">
                <Card Shadow="Shadow.Default" Height="Height.Is100">
                    <CardBody Display="Display.Flex" Flex="Flex.Column" Gap="Gap.Is2">
                        <CardTitle TextSize="TextSize.Heading5">@L["ServiceSummary"]</CardTitle>

                        <div class="d-flex align-items-center gap-2">
                            <Icon Name="IconName.User" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.PatientName</Text>
                        </div>

                        <div class="d-flex align-items-center  gap-2">
                            <Icon Name="IconName.Building" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.HospitalName</Text>
                        </div>

                        <div class="d-flex align-items-center  gap-2">
                            <Icon Name="IconName.Calendar" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.AppointmentDisplayDate</Text>
                        </div>

                        <div class="d-flex align-items-center gap-2">
                            <Icon Name="IconName.Clock" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.AppointmentDisplayTime</Text>
                        </div>

                        <div class="d-flex align-items-center gap-2">
                            <Icon Name="IconName.Hospital" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.DoctorName</Text>
                        </div>

                        <div class="d-flex align-items-center gap-2">
                            <Icon Name="IconName.List" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.DepartmentName</Text>
                        </div>

                        <div class="d-flex align-items-center gap-2">
                            <Icon Name="IconName.Check" IconSize="IconSize.Large" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small">@StepperModel.MedicalServiceName</Text>
                        </div>

                        <div class="d-flex gap-2 align-items-center justify-content-start">
                            <Icon Name="IconName.MoneyBillAlt" IconSize="IconSize.Large" TextColor="TextColor.Secondary" Class="purple"></Icon>
                            <Text TextSize="TextSize.Small" TextWeight="TextWeight.Bold">@StepperModel.Amount</Text>
                            <Text TextSize="TextSize.Small" TextWeight="TextWeight.Bold">@L["TL"]</Text>
                        </div>

                        <div class="mt-4">
                            <p class="text-center">
                                <strong>@L["ConfirmAppointment"]</strong>
                            </p>
                            <Button Clicked="@CreateAppointment" Color="Color.Success" Class="w-100">@L["Confirm"]</Button>
                        </div>
                    </CardBody>
                </Card>
            </div>
        </div>
    </Div>
}
@* Step 4 - Result *@
else if (ActiveStep == 3)
{
    <Div Padding="Padding.Is2">
        <div class="row h-100">
            <Card Shadow="Shadow.Default" Height="Height.Is100">
                <CardBody>
                    @if (IsFinalResultSuccess)
                    {
                        <div class="text-center text-success d-flex flex-column gap-2">
                            <Icon Name="IconName.CheckCircle" IconSize="IconSize.x6" TextColor="TextColor.Success"></Icon>
                            <Text TextSize="TextSize.Heading4" TextWeight="TextWeight.Bold">@L["OperationSuccessful"]</Text>
                            <Text TextSize="TextSize.Heading5" TextWeight="TextWeight.Bold">@L["SuccessMessage"]</Text>
                            <Text TextSize="TextSize.Heading5" TextWeight="TextWeight.Bold">@L["AppointmentInformationWillBeSent"]</Text>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-danger d-flex flex-column gap-2">
                            <Icon Name="IconName.TimesCircle" IconSize="IconSize.x6" TextColor="TextColor.Warning"></Icon>
                            <Text TextSize="TextSize.Heading4" TextWeight="TextWeight.Bold">@L["OperationFailed"]</Text>
                            <Text TextSize="TextSize.Heading5" TextWeight="TextWeight.Bold">@FailureMessage</Text>
                        </div>
                    }
                </CardBody>
            </Card>
        </div>
        <div class="d-flex gap-3">
            <Button Color="Color.Success" Outline
                    Clicked="NavigateToPatient">
                <Icon Name="IconName.ArrowLeft"></Icon>
                @L["GoBackToPatient"]
            </Button>
            <Button Color="Color.Info" Outline
                    Clicked="NavigateToFirstStep">
                <Icon Name="IconName.Add"></Icon>
                @L["NewAppointment"]
            </Button>
        </div>

    </Div>
}

</CardBody>
</Card>
</div>
</div>