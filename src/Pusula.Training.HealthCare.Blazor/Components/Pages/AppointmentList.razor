@page "/appointments/reports/list"

@attribute [Authorize(HealthCarePermissions.Appointments.Default)]

@using Pusula.Training.HealthCare.Appointments
@using Pusula.Training.HealthCare.Blazor.Services
@using Pusula.Training.HealthCare.Localization
@using Pusula.Training.HealthCare.MedicalServices
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Permissions
@using Pusula.Training.HealthCare.Shared
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Volo.Abp.Http.Client
@using Syncfusion.Blazor.Buttons
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@using Syncfusion.Blazor.Calendars
@inherits HealthCareComponentBase

@inject AppointmentAdaptor AppointmentAdaptor
@inject IAppointmentAppService AppointmentAppService
@inject ILookupAppService LookupAppService
@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

<SfBreadcrumb>
    <BreadcrumbItems>
        <Syncfusion.Blazor.Navigations.BreadcrumbItem IconCss="e-icons e-home"/>
        <Syncfusion.Blazor.Navigations.BreadcrumbItem Text=@L["AppointmentList"]/>
    </BreadcrumbItems>
</SfBreadcrumb>
@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["AppointmentList"]" Toolbar="Toolbar">
    <link href="../Components/Pages/AppointmentList.razor.css" rel="stylesheet"/>
</PageHeader>

@* ************************* SEARCH ************************* *@
<div class="row py-3 px-2">
    <div class="col-12 border-1 bg-white rounded-1 p-4">
        <div class="row">
            <div class="col-3 my-1">
                <FieldLabel>@L["DoctorName"]</FieldLabel>
                <SfTextBox @bind-Value="@Filter.DoctorName" Placeholder="@L["DoctorName"]"></SfTextBox>
            </div>
            <div class="col-3 my-1">
                <FieldLabel>@L["PatientName"]</FieldLabel>
                <SfTextBox @bind-Value="@Filter.PatientName" Placeholder="@L["PatientName"]"></SfTextBox>
            </div>
            <div class="col-3 my-1">
                <FieldLabel>@L["ServiceName"]</FieldLabel>
                <SfTextBox @bind-Value="@Filter.ServiceName" Placeholder="@L["ServiceName"]"></SfTextBox>
            </div>
            <div class="col-3 my-1">
                <Field>
                    <FieldLabel>@L["PatientType"]</FieldLabel>
                    <SfDropDownList TItem="KeyValuePair<string, EnumPatientTypes>" TValue="EnumPatientTypes?"
                                    @bind-Value="Filter.PatientType"
                                    DataSource="@PatientTypeCollection">
                        <DropDownListFieldSettings Text="Key" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>
                </Field>
            </div>
            <div class="col-3 my-1">
                <FieldLabel>@L["MinCost"]</FieldLabel>
                <SfNumericTextBox TValue="double?" @bind-Value="@Filter.MinAmount" Placeholder="@L["MinCost"]" Min="MedicalServiceConsts.CostMinValue" Max="MedicalServiceConsts.CostMaxValue"></SfNumericTextBox>
            </div>
            <div class="col-3 my-1">
                <FieldLabel>@L["MaxCost"]</FieldLabel>
                <SfNumericTextBox TValue="double?" @bind-Value="@Filter.MaxAmount" Placeholder="@L["MaxCost"]" Min="MedicalServiceConsts.CostMinValue" Max="MedicalServiceConsts.CostMaxValue"></SfNumericTextBox>
            </div>
            <div class="col-3 my-1">
                <FieldLabel>@L["AppointmentMinDate"]</FieldLabel>
                <SfDatePicker TValue="DateTime?" @bind-Value="@Filter.AppointmentMinDate" Placeholder="@L["AppointmentMinDate"]"></SfDatePicker>
            </div>
            <div class="col-3 my-1">
                <FieldLabel>@L["AppointmentMaxDate"]</FieldLabel>
                <SfDatePicker TValue="DateTime?" @bind-Value="@Filter.AppointmentMaxDate" Placeholder="@L["AppointmentMaxDate"]"></SfDatePicker>
            </div>
            <div class="col-3 my-1">
                <Field>
                    <FieldLabel>@L["MedicalService"]</FieldLabel>
                    <SfDropDownList TItem="LookupDto<Guid>" TValue="Guid?"
                                    @bind-Value="Filter.MedicalServiceId"
                                    DataSource="@MedicalServiceCollection">
                        <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </Field>
            </div>
        </div>
        <div>
            <SfButton CssClass="e-custom" OnClick="GetAppointmentsAsync">
                <SfIcon IconCss="e-icons e-search"></SfIcon> @L["Search"]
            </SfButton>
        </div>

    </div>
</div>

@* ************************* GRID ************************* *@
<div class="row py-3 px-2">
    <div class="col-12 border-1 bg-white rounded-1 p-4">
        <SfGrid
            @ref="Grid"
            DataSource="@AppointmentCollection"
            TValue="AppointmentDto"
            AllowPaging="true"
            AllowSorting="true"
            Toolbar="@(new List<string>() { "Delete" })"
            SelectionSettings="new GridSelectionSettings() { Type = SelectionType.Multiple }">
            <SfDataManager
                AdaptorInstance="@typeof(AppointmentAdaptor)"
                Adaptor="Adaptors.CustomAdaptor">
            </SfDataManager>
            <GridEvents
                OnActionBegin="OnActionBegin"
                RowSelected="RowSelectHandler"
                OnToolbarClick="ToolbarClickHandler"
                RowDeselected="RowDeselectHandler"
                TValue="AppointmentDto">
            </GridEvents>
            <GridPageSettings PageSize="@PageSize"></GridPageSettings>
            <GridColumns>
                @if (CanDeleteType)
                {
                    <GridColumn Type="ColumnType.CheckBox" Width="50"></GridColumn>
                }
                <GridColumn HeaderText="Appointment Date" Width="110">
                    <Template Context="context">
                        @($"{((AppointmentDto)context).AppointmentDate:yyyy-MM-dd}")
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Time Period" Width="110">
                    <Template Context="context">
                        @($"{((AppointmentDto)context).StartTime:HH:mm} - {((AppointmentDto)context).EndTime:HH:mm}")
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Patient Name" Width="110">
                    <Template Context="context">
                        @($"{((AppointmentDto)context).Patient?.FirstName} {((AppointmentDto)context).Patient?.LastName}")
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Doctor Name" Width="110">
                    <Template Context="context">
                        @($"{((AppointmentDto)context).Doctor?.FirstName} {((AppointmentDto)context).Doctor?.LastName}")
                    </Template>
                </GridColumn>
                <GridColumn Field="@nameof(AppointmentDto.Amount)" HeaderText="Cost" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                <GridColumn Field="Patient.PatientType" HeaderText="Patient Type" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                <GridColumn Field="MedicalService.Name" HeaderText="Service Name" TextAlign="TextAlign.Left" Width="130"></GridColumn>

                <GridColumn HeaderText="@L["Actions"]" Width="150">
                    <Template Context="context">
                        <SfButton IconCss="e-icons e-edit" CssClass="e-primary" OnClick="@(() => OpenEditDialog((AppointmentDto)context))">
                        </SfButton>
                        <SfButton IconCss="e-icons e-delete" CssClass="e-danger" OnClick="@(() => DeleteTypeAsync((AppointmentDto)context))">
                        </SfButton>
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>

@* Create Modal *@
<SfDialog Width="450px" IsModal="true" Header="@L["NewAppointmentType"]"
          ShowCloseIcon="true" Visible="@IsCreateDialogVisible">

    <EditForm Model="@NewType" OnValidSubmit="CreateTypeAsync">
        <DataAnnotationsValidator/>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label class="col-form-label">@L["Name"]</label>
                <SfTextBox @bind-Value="@NewType.Name"></SfTextBox>
                <ValidationMessage For="@(() => NewType.Name)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group">
            <SfButton CssClass="e-danger" Content="@L["Cancel"]" IsPrimary="true" @onclick="CloseCreateTypeModal"/>
            <SfButton Type="submit" CssClass="e-success e-outline" Content="@L["Save"]" IsPrimary="true"/>
        </div>
    </EditForm>
</SfDialog>

@* Edit Modal *@
<SfDialog Width="450px" IsModal="true" Header="@L["UpdateAppointmentType"]"
          ShowCloseIcon="true" Visible="@IsEditDialogVisible">

    <EditForm Model="@EditingType" OnValidSubmit="UpdateTypeAsync">
        <DataAnnotationsValidator/>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label class="col-form-label">@L["Name"]</label>
                <SfTextBox @bind-Value="@EditingType.Name"></SfTextBox>
                <ValidationMessage For="@(() => EditingType.Name)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group">
            <SfButton CssClass="e-danger" Content="@L["Cancel"]" IsPrimary="true" @onclick="CloseEditTypeModal"/>
            <SfButton Type="submit" CssClass="e-success e-outline" Content="@L["Save"]" IsPrimary="true"/>
        </div>
    </EditForm>
</SfDialog>

@* ************************* CONFIRM MODAL ************************* *@
<SfDialog @ref="DeleteConfirmDialog" Width="250px" Visible="false" ShowCloseIcon="true" IsModal="true">
    <DialogEvents Closed="Closed"></DialogEvents>
    <DialogTemplates>
        <Header>@L["DeleteRecord"]</Header>
        <Content>@L["DeleteConfirmationMessage"] </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton OnClick="OkClick" Content="@L["Yes"]" IsPrimary="true"></DialogButton>
        <DialogButton OnClick="CancelClick" Content="@L["No"]"></DialogButton>
    </DialogButtons>
</SfDialog>