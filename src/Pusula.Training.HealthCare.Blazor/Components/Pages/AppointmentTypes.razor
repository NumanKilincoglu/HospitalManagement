@page "/appointments/definitions/types"

@attribute [Authorize(HealthCarePermissions.AppointmentTypes.Default)]
@using Microsoft.AspNetCore.Components
@using Pusula.Training.HealthCare.AppointmentTypes
@using Pusula.Training.HealthCare.Blazor.Services
@using Pusula.Training.HealthCare.Departments

@using Pusula.Training.HealthCare.Localization
@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@inherits HealthCareComponentBase
@inject IDepartmentsAppService DepartmentsAppService
@inject IAppointmentTypesAppService AppointmentTypesAppService
@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@using Volo.Abp.Http.Client
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@using Syncfusion.Blazor.Buttons
@inject AppointmentTypeAdaptor TypeAdaptor


<SfBreadcrumb>
    <BreadcrumbItems>
        <Syncfusion.Blazor.Navigations.BreadcrumbItem IconCss="e-icons e-home" />
        <Syncfusion.Blazor.Navigations.BreadcrumbItem Text=@L["AppointmentTypes"] />
    </BreadcrumbItems>
</SfBreadcrumb>
@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["AppointmentTypes"]" Toolbar="Toolbar">
</PageHeader>

@* ************************* GRID ************************* *@
<div class="row py-3 px-2">
    <div class="col-12 border-1 bg-white rounded-1 p-4">
        <SfGrid
            @ref="Grid"
            TValue="AppointmentTypeDto"
            AllowPaging="true"
            AllowSorting="true"
            Toolbar="@(new List<string>() { "Search", "Delete"})">
            <GridSelectionSettings Type="SelectionType.Multiple"></GridSelectionSettings>
            <SfDataManager 
                AdaptorInstance="@typeof(AppointmentTypeAdaptor)"
                Adaptor="Adaptors.CustomAdaptor">
            </SfDataManager>
            <GridEvents
                OnActionBegin="OnActionBegin"
                RowSelected="RowSelectHandler"
                OnToolbarClick="ToolbarClickHandler"
                RowDeselected="RowDeselectHandler"
                ExcelQueryCellInfoEvent="ExcelQueryCellInfoHandler"
                TValue="AppointmentTypeDto">
            </GridEvents>
            <GridPageSettings PageSize="@PageSize"></GridPageSettings>
            <GridColumns>
                @if (CanDeleteType)
                {
                    <GridColumn Type="ColumnType.CheckBox" Width="50"></GridColumn>
                }
                <GridColumn Field="@nameof(AppointmentTypeDto.Name)" HeaderText="@L["Name"]" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn HeaderText="@L["Actions"]" Width="150">
                    <Template Context="context">
                        <SfButton IconCss="e-icons e-edit" CssClass="e-primary" OnClick="@(() => OpenEditDialog((AppointmentTypeDto)context))">
                        </SfButton>
                        <SfButton IconCss="e-icons e-delete" CssClass="e-danger" OnClick="@(() => DeleteTypeAsync((AppointmentTypeDto)context))">
                        </SfButton>
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>

@* Create Modal *@
<SfDialog Width="450px" IsModal="true" Header="@L["NewAppointmentType"]"
          ShowCloseIcon="true" Visible="@IsCreateDialogVisible">

    <EditForm Model="@NewType" OnValidSubmit="CreateTypeAsync">
        <DataAnnotationsValidator/>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label class="col-form-label">@L["Name"]</label>
                <SfTextBox @bind-Value="@NewType.Name"></SfTextBox>
                <ValidationMessage For="@(() => NewType.Name)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group">
            <SfButton CssClass="e-danger" Content="@L["Cancel"]" IsPrimary="true" @onclick="CloseCreateTypeModal"/>
            <SfButton Type="submit" CssClass="e-success e-outline" Content="@L["Save"]" IsPrimary="true"/>
        </div>
    </EditForm>
</SfDialog>

@* Edit Modal *@
<SfDialog Width="450px" IsModal="true" Header="@L["UpdateAppointmentType"]"
          ShowCloseIcon="true" Visible="@IsEditDialogVisible">

    <EditForm Model="@EditingType" OnValidSubmit="UpdateTypeAsync">
        <DataAnnotationsValidator/>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label class="col-form-label">@L["Name"]</label>
                <SfTextBox @bind-Value="@EditingType.Name"></SfTextBox>
                <ValidationMessage For="@(() => EditingType.Name)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group">
            <SfButton CssClass="e-danger" Content="@L["Cancel"]" IsPrimary="true" @onclick="CloseEditTypeModal"/>
            <SfButton Type="submit" CssClass="e-success e-outline" Content="@L["Save"]" IsPrimary="true"/>
        </div>
    </EditForm>
</SfDialog>

@* ************************* CONFIRM MODAL ************************* *@
<SfDialog @ref="DeleteConfirmDialog" Width="250px" Visible="false" ShowCloseIcon="true" IsModal="true">
    <DialogEvents Closed="Closed"></DialogEvents>
    <DialogTemplates>
        <Header>@L["DeleteRecord"]</Header>
        <Content>@L["DeleteConfirmationMessage"] </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton OnClick="OkClick" Content="@L["Yes"]" IsPrimary="true"></DialogButton>
        <DialogButton OnClick="CancelClick" Content="@L["No"]"></DialogButton>
    </DialogButtons>
</SfDialog>