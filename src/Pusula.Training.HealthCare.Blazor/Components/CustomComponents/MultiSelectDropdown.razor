<div>
    <Dropdown >
        <DropdownToggle Color="Color.Light">@Text</DropdownToggle>
        <DropdownMenu Padding="Padding.Is2" Gap="Gap.Is1" MaxMenuHeight="190px">
            @foreach (var item in Items)
            {
                <Check TValue="bool" bind-Checked="item.IsSelected" @onchange="(e) => OnItemChange(item)">
                    @item.DisplayName
                </Check>
            }
        </DropdownMenu>
    </Dropdown>
</div>

@implements IDisposable
@inherits  AppComponentBase

@code {

    [Parameter] public List<ServiceSelectionItem> Items { get; set; } = [];

    [Parameter] public string? Text { get; set; }

    protected override async void OnParametersSet()
    {
        StateHasChanged();
        await Task.CompletedTask;
    }

    private async Task OnItemChange(ServiceSelectionItem item)
    {
        item.IsSelected = !item.IsSelected;
        StateHasChanged();
        await Task.CompletedTask;
    }

    public void Dispose()
    {
    }

}