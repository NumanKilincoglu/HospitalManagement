@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Volo.Abp.AspNetCore.Mvc.UI
@addTagHelper *, Volo.Abp.AspNetCore.Mvc.UI.Bootstrap
@addTagHelper *, Volo.Abp.AspNetCore.Mvc.UI.Bundling

@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Localization
@using Pusula.Training.HealthCare.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Alert
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Button

@model Pusula.Training.HealthCare.Blazor.Models.CustomLoginModel
@inject IStringLocalizer<HealthCareResource> L

<div class="card text-center mt-5 shadow rounded-3 border-1 BG">
    <div class="card-body abp-background p-4">
        <div class="row">
            <div class="col-md-4 d-flex justify-content-center align-items-center radial-bg-dotted">
                <img src="~/images/login/medplus.png" alt="Pusula logo" width="100" height="90">
            </div>
            <div class="col-md-8">
                <h3 class="text-start fw-bold custom-color">@L["MedPlusHealth"]</h3>
                
                @if (Model.EnableLocalLogin)
                {
                    <form method="post" class="mt-4 text-left">
                        <input asp-for="ReturnUrl" hidden/>
                        <input asp-for="ReturnUrlHash" hidden/>

                        <div class="form-floating mb-3">
                            <input asp-for="LoginInput.UserNameOrEmailAddress" class="form-control" placeholder="Username">
                            <label>Username</label>
                            <span asp-validation-for="LoginInput.UserNameOrEmailAddress" class="text-danger"></span>
                        </div>

                        <div class="form-floating mb-3">
                            <input asp-for="LoginInput.Password" type="password" class="form-control" placeholder="Password">
                            <label>Password</label>
                            <span asp-validation-for="LoginInput.Password" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <div class="form-check">
                                <input asp-for="LoginInput.RememberMe" class="form-check-input" id="rememberMeCheck">
                                <label class="form-check-label" for="rememberMeCheck">@L["RememberMe"]</label>
                            </div>
                            <a href="@Url.Page("./ForgotPassword", new { returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash })"
                               class="text-decoration-none small dark-shade-bg">
                                @L["ForgotPassword"]
                            </a>
                        </div>

                        <abp-button type="submit" name="Action" value="Login"
                                    class="btn btn-lg w-100 btn-grad">
                            @L["Login"]
                        </abp-button>

                        @if (Model.ShowCancelButton)
                        {
                            <abp-button type="submit" button-type="Secondary" formnovalidate="formnovalidate" name="Action"
                                        value="Cancel" class="btn btn-secondary btn-lg w-100">
                                @L["Cancel"]
                            </abp-button>
                        }
                    </form>
                }

                @if (Model.VisibleExternalProviders.Any())
                {
                    <div class="mt-4">
                        <h6 class="text-muted">@L["OrLoginWith"]</h6>
                        <form asp-page="./Login" asp-page-handler="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl"
                              asp-route-returnUrlHash="@Model.ReturnUrlHash" method="post">
                            <input asp-for="ReturnUrl" hidden/>
                            <input asp-for="ReturnUrlHash" hidden/>
                            <div class="d-flex flex-wrap justify-content-center mt-3">
                                @foreach (var provider in Model.VisibleExternalProviders)
                                {
                                    <button type="submit" class="btn btn-outline-primary m-1" name="provider"
                                            value="@provider.AuthenticationScheme"
                                            title="@L["GivenTenantIsNotAvailable", provider.DisplayName]">
                                        <i class="bi bi-@provider.AuthenticationScheme.ToLower()"></i> @provider.DisplayName
                                    </button>
                                }
                            </div>
                        </form>
                    </div>
                }

                @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
                {
                    <div class="alert alert-warning mt-3">
                        <strong>@L["InvalidLoginRequest"]</strong> @L["ThereAreNoLoginSchemesConfiguredForThisClient"]
                    </div>
                }
            </div>
        </div>
    </div>

</div>